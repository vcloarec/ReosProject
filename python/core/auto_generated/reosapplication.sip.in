/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/reosapplication.h                                           *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/






class ReosApplication: QApplication
{
%Docstring(signature="appended")
*************************************************************************
reosapplication.h
--------------------------------------
  Date                 : 20-09-2020
  Copyright            : (C) 2020 by Vincent Cloarec
  email                : vcloarec at gmail dot com
  **************************************************************************

This program is free software; you can redistribute it and/or modify  *
it under the terms of the GNU General Public License as published by  *
the Free Software Foundation; either version 2 of the License, or     *
(at your option) any later version.                                   *

**************************************************************************
%End

%TypeHeaderCode
#include "reosapplication.h"
%End
%TypeCode
    // Convert a Python argv list to a conventional C argc count and argv array.
    static char **qtgui_ArgvToC( PyObject *argvlist, int &argc )
    {
      char **argv;

      argc = PyList_GET_SIZE( argvlist );

      // Allocate space for two copies of the argument pointers, plus the
      // terminating NULL.
      if ( ( argv = ( char ** )sipMalloc( 2 * ( argc + 1 ) * sizeof( char * ) ) ) == NULL )
        return NULL;

      // Convert the list.
      for ( int a = 0; a < argc; ++a )
      {
        char *arg;
        // Get the argument and allocate memory for it.
        if ( ( arg = PyBytes_AsString( PyList_GET_ITEM( argvlist, a ) ) ) == NULL ||
             ( argv[a] = ( char * )sipMalloc( strlen( arg ) + 1 ) ) == NULL )
          return NULL;
        // Copy the argument and save a pointer to it.
        strcpy( argv[a], arg );
        argv[a + argc + 1] = argv[a];
      }

      argv[argc + argc + 1] = argv[argc] = NULL;

      return argv;
    }

    // Remove arguments from the Python argv list that have been removed from the
    // C argv array.
    static void qtgui_UpdatePyArgv( PyObject *argvlist, int argc, char **argv )
    {
      for ( int a = 0, na = 0; a < argc; ++a )
      {
        // See if it was removed.
        if ( argv[na] == argv[a + argc + 1] )
          ++na;
        else
          PyList_SetSlice( argvlist, na, na + 1, NULL );
      }
    }
%End
  public:

    ReosApplication( SIP_PYLIST argv ) / PostHook = __pyQtQAppHook__ / [( int &argc, char **argv )];
%Docstring
Constructor for ReosApplication.

:param argv: command line arguments
%End
%MethodCode
    // The Python interface is a list of argument strings that is modified.

    int argc;
    char **argv;

    // Convert the list.
    if ( ( argv = qtgui_ArgvToC( a0, argc ) ) == NULL )
      sipIsErr = 1;
    else
    {
      // Create it now the arguments are right.
      static int nargc = argc;

      sipCpp = new sipReosApplication( nargc, argv );

      // Now modify the original list.
      qtgui_UpdatePyArgv( a0, argc, argv );
    }
%End

    ~ReosApplication();
    virtual bool notify( QObject *receiver, QEvent *event );


    ReosCoreModule *coreModule() const;
%Docstring
Returns a pointer to the core module that contains all other modules
%End

    static QString enginesPath();
%Docstring
Returns the path of engine library files
%End

    static QString dataProviderpath();
%Docstring
Returns the path of data provider library files
%End

    static QString gisProviderPath();
%Docstring
Returns the path of gis provider library files
%End


};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/reosapplication.h                                           *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
