/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/rainfall/reosgriddedrainitem.h                              *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/




class ReosGriddedRainfall : ReosRenderedObject
{
%Docstring(signature="appended")
*************************************************************************
reosgriddedrainitem.h - ReosGriddedRainItem

---------------------
  begin                : 11.11.2022
  copyright            : (C) 2022 by Vincent Cloarec
  email                : vcloarec at gmail dot com
  **************************************************************************

This program is free software; you can redistribute it and/or modify  *
it under the terms of the GNU General Public License as published by  *
the Free Software Foundation; either version 2 of the License, or     *
(at your option) any later version.                                   *

**************************************************************************
%End

%TypeHeaderCode
#include "reosgriddedrainitem.h"
%End
  public:
    ReosGriddedRainfall( QObject *parent = 0 );
    ReosGriddedRainfall( const QString &dataSource, const QString &providerKey, QObject *parent = 0 );
    ~ReosGriddedRainfall();


    static ReosGriddedRainfall *loadGriddedRainfall( const QString &dataSource, const QString &providerKey, QObject *parent = 0 );


    static QString staticType();

    int gridCount() const;
%Docstring
Returns the count of grids (e.g. time steps)
%End

    const QDateTime startTime( int index ) const;
%Docstring
Returns the start time related to the grid with ``index``
%End

    const QDateTime endTime( int index ) const;
%Docstring
Returns the end time related to the grif with ``index``
%End


    ReosDuration minimumTimeStep() const;

    const QVector<double> intensityValues( int index ) const;
%Docstring
Returns all the values related to ``index``, order of values can be deduced from the sign of sizes dx,dy)
of the cell contained in the raster extent (see :py:func:`~ReosGriddedRainfall.extent`
%End


    int dataIndex( const QDateTime &time ) const;
%Docstring
Returns the index corresponding to ``time``
%End

    ReosRasterExtent rasterExtent() const;
%Docstring
Returns the raster extent of all the grids
%End

    bool isValid() const;
%Docstring
Returns whether the gridded rainfallis valid
%End


    ReosGriddedRainfall *transform( const ReosMapExtent &destination, double resolX, double resolY, const ReosTimeWindow &timeWindow = ReosTimeWindow(), QObject *parent = 0 ) const /Factory/;
%Docstring
Transform the gridded rain to fit with extent ``destination`` with resolution ``resolX`` and ``resolY``,
for each time steps intersecting ``timeWindow`` (all time step if timeWindow is invalid).
%End










  public slots:
    virtual void updateData() const;


  signals:
    void loadingFinished();

};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/rainfall/reosgriddedrainitem.h                              *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
