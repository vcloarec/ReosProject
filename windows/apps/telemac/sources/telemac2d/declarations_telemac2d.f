!                   *****************************
                    MODULE DECLARATIONS_TELEMAC2D
!                   *****************************
!
!
!***********************************************************************
! TELEMAC2D   V8P4
!***********************************************************************
!
!brief    DECLARATION OF PRINICIPAL TELEMAC2D VARIABLES
!
!history  J-M HERVOUET (LNH)
!+
!+
!+   LINKED TO BIEF 5.0
!
!history  N.DURAND (HRW), S.E.BOURBAN (HRW)
!+        13/07/2010
!+        V6P0
!+   Translation of French comments within the FORTRAN sources into
!+   English comments
!
!history  N.DURAND (HRW), S.E.BOURBAN (HRW)
!+        21/08/2010
!+        V6P0
!+   Creation of DOXYGEN tags for automated documentation and
!+   cross-referencing of the FORTRAN sources
!
!history  C.COULET (ARTELIA)
!+        30/03/2012
!+        V6P2
!+   Modification for adding "bridge" file and separation of weirs and
!+   culvert file
!
!history  C.COULET / A.MASSON (ARTELIA) / P. CHASSE (CETMEF)
!+        19/07/2012
!+        V6P2
!+   Modification for adding breaches management during simulation
!
!history  C. COULET (ARTELIA)
!+        23/04/2013
!+        V6P3
!+     Correction of a bug in BUSE.F
!
!history  C.COULET / A.REBAI / E.DAVID (ARTELIA)
!+        07/06/2013
!+        V6P3
!+   Modification for new treatment of weirs
!
!history  J-M HERVOUET (EDF LAB, LNHE)
!+        17/01/2014
!+        V7P0
!+   Adding a zones data file.
!
!history  Y.B. TADESSE (TUHH, INSTITUTE OF RIVER AND COASTAL ENGINEERING)
!+        14/02/2014
!+        V6P3R2
!+   Modification for adding later breach growth option
!
!history  J-M HERVOUET (EDF LAB, LNHE)
!+        30/04/2014
!+        V7P0
!+   Adding 2 blocks FTILD2 and FNCAR2 for weak characteristics.
!
!history  C. VILLARET (HRW)
!+        22/09/2014
!+        V7P0
!+   Adding a logical keyword FRICOU for wave-current interactions
!
!history  R. ATA (EDF-LNHE)
!+        10/11/2014
!+        V7P0
!+   adding of waq variables
!
!history  J-M HERVOUET (EDF LAB, LNHE)
!+        03/09/2015
!+        V7P1
!+   A number of arrays now allocatable, depending on new keywords
!
!history  J-M HERVOUET (EDF LAB, LNHE)
!+        23/06/2016
!+        V7P2
!+   NAMETRAC now allocatable.
!
!history  C.COULET (ARTELIA)
!+        01/09/2016
!+        V7P2
!+   Modification for // treatment of weirs (type=2)
!+   Creation of a dedicated structure for weirs
!
!history  R. ATA (EDF LAB, LNHE)
!+        23/09/2016
!+        V7P2
!+   add new turbulence model of spalart-allmaras
!
!history  L.LEBALLEUR (ACTIMAR)
!+        30/03/2017
!+        V7P3
!+   Modification of MISC_NCMX_BTM and MISC_CONSTID_BTM
!+   Adding 7 extra harmonic constituents, for FES2014 database.
!
!history  B. GLANDER (BAW)
!+        28/11/2017
!+        V7P2
!+   add coupling with Nestor
!
!history  C.COULET (ARTELIA)
!+        09/10/2020
!+        V8P2
!+   Addition of output file to print discharge of weirs (type=2)
!
!history  J.-P. TRAVERT (EDF, LNHE)
!+        07/06/2022
!+        V8P4
!+   Addition of new arrays and variables for new models of infiltration
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
      USE BIEF_DEF
      USE FRICTION_DEF
!
!       NOTE: THIS MODULE IS ORGANISED IN 10 PARTS
!
!      01) VECTORS (WILL BE DECLARED AS BIEF_OBJ STRUCTURES)
!      02) MATRICES (WILL BE DECLARED AS BIEF_OBJ STRUCTURES)
!      03) BLOCKS (WILL BE DECLARED AS BIEF_OBJ STRUCTURES)
!      04) INTEGERS
!      05) LOGICAL VALUES
!      06) REALS
!      07) STRINGS
!      08) SLVCFG STRUCTURES
!      09) MESH STRUCTURE
!      10) ALIASES
!
!
!       ALL BIEF_OBJ AND BIEF_MESH STRUCTURES ARE ALLOCATED
!       IN SUBROUTINE POINT_TELEMAC2D
!
!-----------------------------------------------------------------------
!
!       1) VECTORS
!
!-----------------------------------------------------------------------
!
!     COMPONENTS OF VELOCITY
!
      TYPE(BIEF_OBJ), TARGET :: U,V
!
!     DEPTH AT NEW TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: H
!
!     TRACERS AT NEW TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: T
!
!     K AT NEW TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: AK
!
!     EPSILON AT NEW TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: EP
!
!     VISCSA (OF SPALART-ALLMARAS) AT NEW TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: VISCSA
!
!     NUSA (OF SPALART-ALLMARAS) AFTER ADVECTION BY CHARACTERISTICS
!
      TYPE(BIEF_OBJ), TARGET :: NUTILD
!
!     NUSA (OF SPALART-ALLMARAS) AT OLD TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: NUN
!
!     U AND V AFTER ADVECTION BY CHARACTERISTICS
!
      TYPE(BIEF_OBJ), TARGET :: UTILD,VTILD
!
!     H AFTER ADVECTION BY CHARACTERISTICS
!
      TYPE(BIEF_OBJ), TARGET :: HTILD
!
!     T AFTER ADVECTION BY CHARACTERISTICS
!
      TYPE(BIEF_OBJ), TARGET :: TTILD
!
!     AK AFTER ADVECTION BY CHARACTERISTICS
!
      TYPE(BIEF_OBJ), TARGET :: AKTILD
!
!     EP AFTER ADVECTION BY CHARACTERISTICS
!
      TYPE(BIEF_OBJ), TARGET :: EPTILD
!
!     U AND V AT OLD TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: UN,VN
!
!     H AT OLD TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: HN
!
!     T AT OLD TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: TN
!
!     AK AT OLD TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: AKN
!
!     EP AT OLD TIME-STEP
!
      TYPE(BIEF_OBJ), TARGET :: EPN
!
!     INCREMENT OF H IN ONE TIME STEP
!
      TYPE(BIEF_OBJ), TARGET :: DH
!
!     INCREMENTS OF U AND V IN ONE TIME STEP
!
      TYPE(BIEF_OBJ), TARGET :: DU,DV
!
!     INCREMENT OF HN IN ONE TIME STEP
!
      TYPE(BIEF_OBJ), TARGET :: DHN
!
!     COMPONENTS OF ADVECTING FIELD
!
      TYPE(BIEF_OBJ), TARGET :: UCONV,VCONV
!
!     DEPTH IN THE PROPAGATION TERM I.E. IN H DIV(U)
!
      TYPE(BIEF_OBJ), TARGET :: HPROP
!
!     PRESCRIBED VALUES ON BOUNDARIES FOR U AND V
!
      TYPE(BIEF_OBJ), TARGET :: UBOR,VBOR
!
!     VALUE ON BOUNDARIES FOR NU IN SA MODEL
!
      TYPE(BIEF_OBJ), TARGET :: NUBOR
!
!     VALUES ON BOUNDARIES: WALL FRICTION COEFFICIENTS
!
      TYPE(BIEF_OBJ), TARGET :: AUBOR,UETUTA
!
!     PRESCRIBED VALUES ON BOUNDARIES FOR DEPTH
!
      TYPE(BIEF_OBJ), TARGET :: HBOR
!
!     PRESCRIBED VALUES ON BOUNDARIES FOR TRACERS
!
      TYPE(BIEF_OBJ), TARGET :: TBOR
!
!     PRESCRIBED VALUES ON BOUNDARIES: K AND EPSILON
!
      TYPE(BIEF_OBJ), TARGET :: KBOR,EBOR
!
!     FLUX ON THE BOUNDARIES: WATER AND TRACERS
!
      TYPE(BIEF_OBJ), TARGET :: FLBOR,FLBORTRA
!
!     ON BOUNDARIES: COEFFICIENTS FOR HEAT FLUXES
!
      TYPE(BIEF_OBJ), TARGET :: ATBOR,BTBOR
!
!     ADIMENSIONAL FRICTION COEFFICIENTS (BOTTOM AND BOUNDARIES)
!
      TYPE(BIEF_OBJ), TARGET :: CF,CFBOR
!
!     VOID STRUCTURE
!
      TYPE(BIEF_OBJ), TARGET :: S
!
!     BOTTOM TOPOGRAPHY: PER POINT, PER ELEMENT
!
      TYPE(BIEF_OBJ), TARGET :: ZF,ZFE
!
!     VELOCITY DIFFUSIVITY: VELOCITY, TRACERS, SAVED
!
      TYPE(BIEF_OBJ), TARGET :: VISC,VISCT,VISC_S
!
!     SOURCE TERMS IN THE MOMENTUM EQUATION
!
      TYPE(BIEF_OBJ), TARGET :: FU,FV
!
!     WAVE STRESSES (FROM ARTEMIS OR TOMAWAC)
!
      TYPE(BIEF_OBJ), TARGET :: FXWAVE,FYWAVE
!
!     INITIAL DEPTH
!
      TYPE(BIEF_OBJ), TARGET :: H0
!
!     MASK FOR TRACERS
!
      TYPE(BIEF_OBJ), TARGET :: MASKTR
!
!     ATMOSPHERIC PRESSURE
!
!     TYPE(BIEF_OBJ), TARGET :: PATMOS
!
!     COMPONENTS OF WIND VELOCITY
!
!     TYPE(BIEF_OBJ), TARGET :: WINDX,WINDY
!
!     DENSITY
!
      TYPE(BIEF_OBJ), TARGET :: RO
!
!     INTEGRAL OF BASES, AND THE SAME AFTER ASSEMBLING IN PARALLEL
!
      TYPE(BIEF_OBJ), TARGET :: VOLU2D,V2DPAR
!
!     INVERSE OF INTEGRAL OF BASES
!
      TYPE(BIEF_OBJ), TARGET :: UNSV2D
!
!     RIGHT HAND SIDES OF LINEAR SYSTEMS
!
      TYPE(BIEF_OBJ), TARGET :: CV1,CV2,CV3,CV1S
!
!     RIGHT HAND SIDE OF CONTINUITY EQUATION
!
      TYPE(BIEF_OBJ), TARGET :: SMH
!
!     P0 WORKING ARRAYS
!
      TYPE(BIEF_OBJ), TARGET :: TE1,TE2,TE3
!
!     WORKING ARRAYS FOR OPTION 3 OF TREATMENT OF TIDAL FLATS
!
      TYPE(BIEF_OBJ), TARGET :: TE4,TE5
!
!     ARRAY TO SAVE FV STATE VARIABLES
!
      TYPE(BIEF_OBJ), TARGET :: W2
!
!     WORKING ARRAY (SIZE MULTIPLE OF NELMAX)
!
      TYPE(BIEF_OBJ), TARGET :: W1
!
!     WORKING ARRAY FOR PRESCRIBED DISCHARGE (FINITE VOLUMES AND FINITE ELEMENTS)
!
      TYPE(BIEF_OBJ), TARGET :: W1DEB
!
!     FOR FLUXES ACCROSS SECTIONS
!
      TYPE(BIEF_OBJ), TARGET :: MSKSEC
!
      TYPE(BIEF_OBJ), TARGET :: ZFLATS
!
!     FRICTION COEFFICIENT, IN TERMS OF STRICKLER, CHEZY, ETC
!
      TYPE(BIEF_OBJ), TARGET :: CHESTR,CHESTR0
!
!     TYPES OF BOUNDARY CONDITIONS ON U, V, H AND TRACERS
!
      TYPE(BIEF_OBJ), TARGET :: LIUBOR,LIVBOR,LIHBOR,LITBOR
!
!     TYPES OF BOUNDARY CONDITIONS ON TRACERS
!
      TYPE(BIEF_OBJ), TARGET :: LIMTRA
!
!     TYPES OF BOUNDARY CONDITIONS ON K AND EPSILON
!
      TYPE(BIEF_OBJ), TARGET :: LIMKEP
!
!     TYPES OF BOUNDARY CONDITIONS ON SA MODEL
!
      TYPE(BIEF_OBJ), TARGET :: LIMSA
!
!     TYPES OF BOUNDARY CONDITIONS FOR PROPAGATION
!
      TYPE(BIEF_OBJ), TARGET :: LIMPRO
!
!     BOUNDARY CONDITIONS ON H, U, V (COPIES OF LIHBOR,LIUBOR,LIVBOR)
!
      TYPE(BIEF_OBJ), TARGET :: CLH,CLU,CLV
!
!     ORIGINAL BOUNDARY NODE NUMBER (OR COLOUR GIVEN BY USER)
!
      TYPE(BIEF_OBJ), TARGET :: BOUNDARY_COLOUR
!
!     POSITIONS OF FLOATING BODIES
!
      TYPE(BIEF_OBJ), TARGET :: XFLOT,YFLOT
!
!     FOR LAGRANGIAN DRIFTS
!
      TYPE(BIEF_OBJ), TARGET :: SHPFLO,XLAG,YLAG,SHPLAG
!
!     TIME STEP OF INITIAL RELEASE FOR FLOATING BODIES, IDEM FOR FINAL
!
      TYPE(BIEF_OBJ), TARGET :: DEBFLO,FINFLO
!
!     ELEMENT WHERE THE FLOATING BODIES (DROGUES) ARE
!
      TYPE(BIEF_OBJ), TARGET :: ELTFLO
!
!     FOR TAGGING THE DROGUES
!
      TYPE(BIEF_OBJ), TARGET :: TAGFLO
!
!     TO CLASSIFY THE DROGUES
!
      TYPE(BIEF_OBJ), TARGET :: CLSFLO
!
!     TIME STEP AT THE BEGINNING (END) OF LAGRANGIAN DRIFTS
!
      TYPE(BIEF_OBJ), TARGET :: DEBLAG,FINLAG
!
!     ELEMENT WHERE IS THE LAGRANGIAN DRIFT
!
      TYPE(BIEF_OBJ), TARGET :: ELTLAG
!
!     INTEGERS WORKING ARRAYS
!
      TYPE(BIEF_OBJ), TARGET :: IT1,IT2,IT3,IT4
!
!     COMPONENTS OF DISCHARGE AT TIME N
!
      TYPE(BIEF_OBJ), TARGET :: QU,QV
!
!     STORED WATER DEPTH, AND CORRECTED STORED WATER DEPTH
!
      TYPE(BIEF_OBJ), TARGET :: HSTOK,HCSTOK
!
!     SOURCE TERMS OF TRACERS
!
      TYPE(BIEF_OBJ), TARGET :: SMTR
!
!     REFERENCE OF BOUNDARY NODES
!
      TYPE(BIEF_OBJ), TARGET :: LOGFR
!
!     FINITE VOLUME FLUXES
!
      TYPE(BIEF_OBJ), TARGET :: FLUX
!
!     TRACER FLUX
!
      TYPE(BIEF_OBJ), TARGET :: FLUXT
!
!     TRACER FLUX OF LAST ITERATION (FOR SECOND ORDER)
!
      TYPE(BIEF_OBJ), TARGET :: FLUXT_OLD
!
!     FLUX OF MASS FOR TRACER
!
      TYPE(BIEF_OBJ), TARGET :: FLUHTEMP
!
!     H*TRACER
      TYPE(BIEF_OBJ), TARGET :: HT

!     RECONSTRUCTED DEPTH, AND CORRECTED VERSION
!
      TYPE(BIEF_OBJ), TARGET :: HC
!
!     VARIATIONS OF Z OF ORDER 2
!
      TYPE(BIEF_OBJ), TARGET :: DSZ
!
!     ??????
!
      TYPE(BIEF_OBJ), TARGET :: SECMOU , IFAMAS
!
!     MASK FOR POINTS (1: normal; 0:masked)
!
      TYPE(BIEF_OBJ), TARGET :: MASKPT
!
!     MASK FOR ELEMENTS (1: normal; 0:masked)
!
      TYPE(BIEF_OBJ), TARGET :: MASKEL
!
!     LIQUID BOUNDARY NUMBERS
!
      TYPE(BIEF_OBJ), TARGET :: NUMLIQ
!
!     MAXIMUM ELEVATIONS
!
      TYPE(BIEF_OBJ), TARGET :: MAXZ
!
!     CORRESPONDING TIMES FOR MAXIMUM ELEVATIONS
!
      TYPE(BIEF_OBJ), TARGET :: TMAXZ
!
!     MAXIMUM VELOCITIES
!
      TYPE(BIEF_OBJ), TARGET :: MAXV
!
!     CORRESPONDING TIMES FOR MAXIMUM VELOCITIES
!
      TYPE(BIEF_OBJ), TARGET :: TMAXV
!
!     FOR STORING ZONE NUMBERS
!
      TYPE(BIEF_OBJ), TARGET :: ZONE
!
!     FOR STORING RESULTS OF FOURIER ANALYSIS (AMPLITUDE AND PHASE)
!
      TYPE(BIEF_OBJ), TARGET :: AMPL,PHAS
!
!     FRICTION COEFFICIENT FOR BOUNDARY CONDITIONS
!
      TYPE(BIEF_OBJ),TARGET :: CHBORD
!
!     COMPATIBLE COMPONENTS OF VELOCITY FOR DELWAQ
!
      TYPE(BIEF_OBJ),TARGET :: UDEL,VDEL
!
!     VELOCITY WILL BE UCONV + DM1*GRAD(ZCONV)
!
      TYPE(BIEF_OBJ),TARGET :: DM1,ZCONV
!
!     COMPATIBLE FLUXES FOR DELWAQ
!
      TYPE(BIEF_OBJ),TARGET :: FLODEL
!
!     COEFFICIENTS OF LIMITATION OF FLUXES (SEGMENT, EBE)
!
      TYPE(BIEF_OBJ),TARGET :: FLULIM,FLULIMEBE
!
!     EXPLICIT SOURCE TERMS FOR TRACERS
!
      TYPE(BIEF_OBJ),TARGET :: TEXP
!
!     TERMS DUE TO SOURCES FOR TRACERS
!
      TYPE(BIEF_OBJ),TARGET :: TSCEXP
!
!     IMPLICIT SOURCE TERMS FOR TRACERS
!
      TYPE(BIEF_OBJ),TARGET :: TIMP
!
!     FLUXES FOR FINITE VOLUMES
!
      TYPE(BIEF_OBJ),TARGET :: FLUX_OLD
!
!     FOR TIDAL BOUNDARY CONDITIONS
!
      TYPE(BIEF_OBJ),TARGET :: HBTIDE,UBTIDE,VBTIDE,NUMTIDE
!
!     FOR RAIN-EVAPORATION
!
      TYPE(BIEF_OBJ),TARGET :: PLUIE
!
!     FOR RAIN-EVAPORATION OPTION WITH RUNOFF-RAINFALL PREDICTION
!
      TYPE(BIEF_OBJ),TARGET :: ACCROF,CN,ZFSLOP,ACCR,POTMAXRET,IABST
      TYPE(BIEF_OBJ),TARGET :: F0, FC, ACCINF, KS
!
!     FOR CULVERTS/SIPHONS MANAGEMENT
!
      TYPE(BIEF_OBJ),TARGET :: ENTBUS, SORBUS, LRGBUS, HAUBUS, ALTBUS
      TYPE(BIEF_OBJ),TARGET :: CSBUS , CEBUS , DELBUS, ANGBUS, LBUS
      TYPE(BIEF_OBJ),TARGET :: UBUS, VBUS, DBUS, TBUS, CLPBUS
      TYPE(BIEF_OBJ),TARGET :: SECBUS, LONGBUS, AABUS
      TYPE(BIEF_OBJ),TARGET :: CV, C56, CV5, C5, CTRASH, FRICBUS, CIRC
!
!     NEIGHBORS OF SEGMENT (FOR WAF SCHEME)
!
      TYPE(BIEF_OBJ),TARGET :: NEISEG
!
!     FOR BREACHES MANAGEMENT
!
!     OPTNBR: OPTION FOR BREACHING PROCESS
      TYPE(BIEF_OBJ),TARGET :: OPTNBR
!     TDECBR: BREACH OPENING MOMENT
      TYPE(BIEF_OBJ),TARGET :: TDECBR
!     DURBR: DURATION OF BREACHING PROCESS
      TYPE(BIEF_OBJ),TARGET :: DURBR
!     ZFINBR: FINAL BOTTOM ALTITUDE OF THE BREACH
      TYPE(BIEF_OBJ),TARGET :: ZFINBR
!     ZDECBR: CONTROL LEVEL OF THE BREACH (WATER LEVEL TO START BREACHING)
      TYPE(BIEF_OBJ),TARGET :: ZDECBR
!     POLWDT: WIDTH OF POLYGON DEFINING THE BREACH
      TYPE(BIEF_OBJ),TARGET :: POLWDT
!     NUMPSD: NUMBER OF GLOBAL NODE CONTROLLING THE BREACHING
      TYPE(BIEF_OBJ),TARGET :: NUMPSD
!     OPTERO: OPTION FOR LATERAL GROWTH
      TYPE(BIEF_OBJ),TARGET :: OPTERO
!     NBNDBR: NUMBER OF MESH POINTS INSIDE THE POLYGON DEFINING THE BREACH
      TYPE(BIEF_OBJ),TARGET :: NBNDBR
!     DKAXCR,DKAYCR: X AND Y COORDINATES OF THE DIKE POINTS (ON THE DIKE AXIS).
!     THEY CORRESPOND TO THE POINTS DESCRIBING THE POLYLINE DEFINING THE BREACH
!     GIVEN BY USER IN THE BREACHES DATA FILE.
!     PONDSB: IT CONTAINS THE DISTANCE BETWEEN THE DIKE POINTS
      TYPE(BIEF_OBJ),TARGET :: DKAXCR, DKAYCR, PONDSB
!     NPONBR: VECTOR CONTAINING NUMBER OF POINTS OF THE POLYLINE BY BREACH
      TYPE(BIEF_OBJ),TARGET :: NPONBR
!     INDBR: BLOCK CONTAINING NODES INSIDE POLYGONS DEFINING THE BREACH
      TYPE(BIEF_OBJ),TARGET :: INDBR
!     ZCRBR: CONTAINS MAX VALUE OF BOTTOM BETWEEN POINTS INSIDE THE POLYGON DEFINING THE BREACH.
!            IT DEFINES THE INITIAL BOTTOM ALTITUDE OF THE DIKE
      TYPE(BIEF_OBJ),TARGET :: ZCRBR
!     INIBRW: INITIAL BREACH WIDTH
      TYPE(BIEF_OBJ),TARGET :: INIBRW
!     CURBRW: CURRENT BREACH WIDTH
      TYPE(BIEF_OBJ),TARGET :: CURBRW
!     FINBRW: FINAL BREACH WIDTH
      TYPE(BIEF_OBJ),TARGET :: FINBRW
!     DIKE1: VECTOR OF DIKE POINTS ON THE BORDER OF THE POLYGON
!     NOTE THAT THEY ARE ORDERED FROM DOWNSTREAM TO UPSTREAM OR FROM UPSTREAM TO DOWNSTREAM
!     ACCORDING TO THE ORDER OF THE LIST OF POLYLINE POINTS GIVEN IN THE BREACHES DATA FILE
      INTEGER, ALLOCATABLE :: DIKE1(:,:)
!     DIKE2: VECTOR OF DIKE POINTS ON THE BORDER OF THE POLYGON
      INTEGER, ALLOCATABLE :: DIKE2(:,:)
!     DIKE3: VECTOR OF DIKE POINTS WITH OPPOSITE ORDER WITH RESPECT TO DIKE2
!     (THE ORDER IS THE SAME OF DIKE1: FROM UPSTREAM TO DOWNSTREAM OR VICE VERSA)
      INTEGER, ALLOCATABLE :: DIKE3(:,:)
!     DEPTHN: TO SAVE DEPTH AT PREVIOUS TIME STEP, NECESSARY TO COMPUTE A DELTA OF DEPTHS (FOR FROEHLICH'S LAW)
      TYPE(BIEF_OBJ),TARGET :: DEPTHN
!
!     FOR TWO STAGES LAW: FINAL TIME STAGE 1, VELOCITY STAGE 1, VELOCITY STAGE 2
      DOUBLE PRECISION, ALLOCATABLE :: FT1(:),VELS1(:),VELS2(:)
!     FOR VERHEIJ&VAN DE KNAAP: CRITICAL FLOW VELOCITY, EMPIRICAL FACTORS (1 AND 2) FOR BREACH WIDTH
      DOUBLE PRECISION, ALLOCATABLE :: UC(:),F1(:),F2(:)
!     FOR FROEHLICH: DF, DIFFERENCE BETWEEN INITIAL AND FINAL ELEVATION OF THE DIKE
      DOUBLE PRECISION, ALLOCATABLE :: DF(:)
!     LOGICAL FOR INITIAL WIDTH OF BREACH
      LOGICAL LOGINB
!
!     FOR WEIR MANAGEMENT (TYPE WEIR = 1)
!
      TYPE(BIEF_OBJ),TARGET :: NPSING
      TYPE(BIEF_OBJ),TARGET :: NDGA1, NDGB1
      TYPE(BIEF_OBJ),TARGET :: ZDIG, PHIDIG
!
!     FOR WEIR MANAGEMENT (TYPE WEIR = 2) SEE TYPE WEIR HEREUNDER
!
!     VARIABLES FOR SECONDARY CURRENTS (SECCURRENTS)
!
      TYPE(BIEF_OBJ),TARGET :: SEC_TAU, SEC_R
!
!     WALL DISTANCES
!
      TYPE(BIEF_OBJ),TARGET :: WDIST
!
!     REFERENCE LEVEL FOR NESTOR
!
      TYPE(BIEF_OBJ),TARGET :: ZRL
!
!     CORRECTION FOR SECOND ORDER IN FV
!
      TYPE(BIEF_OBJ),TARGET :: CORR_I,CORR_J,CORR_ZL,CORR_ZR
      TYPE(BIEF_OBJ),TARGET :: CORR_HL,CORR_HR,CORR_UL,CORR_UR
      TYPE(BIEF_OBJ),TARGET :: CORR_VL,CORR_VR
!
!     INTERPOLATION WEIGHTS FOR FIELD
!     RECONSTRUCTION IN FINITE VOLUME DIFFUSION SOLVER
!
      TYPE(BIEF_OBJ),TARGET :: ALRTPF
!
!-----------------------------------------------------------------------
!
!       2) MATRICES
!
!-----------------------------------------------------------------------
!
!       MATRICES
!
!       SYSTEM SOLVED IN PROPAG WILL BE :
!
!     ( AM1  BM1  BM2 )   (DH)      ( CV1 )
!     (               )   (  )      (     )
!     ( CM1  AM2  A23 )   (U )  =   ( CV2 )
!     (               )   (  )      (     )
!     ( CM2  A32  AM3 )   (V )      ( CV3 )
!
!
!     MATRICES OF THE FINAL LINEAR SYSTEM OF THE PRIMITIVE EQUATIONS OPTION
!
      TYPE(BIEF_OBJ), TARGET :: AM1,AM2,AM3,BM1,BM2,CM1,CM2,A23,A32
!
!     BOUNDARY MATRIX
!
      TYPE(BIEF_OBJ), TARGET :: MBOR
!
!     BM1 AND BM2 SAVED
!
      TYPE(BIEF_OBJ), TARGET :: BM1S,BM2S
!
!-----------------------------------------------------------------------
!
!       3) BLOCKS
!
!-----------------------------------------------------------------------
!
!     DIFFUSION MATRIX
!
      TYPE(BIEF_OBJ), TARGET :: TM1
!
!     BLOCK FOR DIRICHLET VALUES HBOR, UBOR AND VBOR
!
      TYPE(BIEF_OBJ), TARGET :: DIRBOR
!
!     BLOCK OF MASKS
!
      TYPE(BIEF_OBJ), TARGET :: MASK
!
!     BLOCKS OF WORKING ARRAYS
!
      TYPE(BIEF_OBJ), TARGET :: TB,TB2
!
!     BLOCK OF PRIVATE VECTORS
!
      TYPE(BIEF_OBJ), TARGET :: PRIVE
!
!     BLOCK OF DIFFERENTIATED VECTORS
!
      TYPE(BIEF_OBJ), TARGET :: ADVAR
!
!     BLOCKS OF VARIABLES AT TIME N+1, AT TIME N
!
      TYPE(BIEF_OBJ), TARGET :: F,FN
!
!     BLOCKS OF VARIABLES AFTER ADVECTION BY CHARACTERISTICS (STRONG AND WEAK)
!
      TYPE(BIEF_OBJ), TARGET :: FTILD,FTILD2
!
!     BLOCK OF VARIABLES TO BE ADVECTED BY CHARACTERISTICS (STRONG AND WEAK)
!
      TYPE(BIEF_OBJ), TARGET :: FNCAR,FNCAR2
!
!     BLOCKS OF MATRICES FOR LINEAR SYSTEMS
!
      TYPE(BIEF_OBJ), TARGET :: MAT
!
!     BLOCKS OF DIFFERENTIATED MATRICES FOR LINEAR SYSTEMS
!
      TYPE(BIEF_OBJ), TARGET :: ADMAT
!
!     BLOCKS OF RIGHT HAND SIDES FOR LINEAR SYSTEMS
!
      TYPE(BIEF_OBJ), TARGET :: RHS
!
!     BLOCKS OF DIFFERENTIATED RIGHT HAND SIDES FOR LINEAR SYSTEMS
!
      TYPE(BIEF_OBJ), TARGET :: ADRHS
!
!     BLOCKS OF UNKNOWNS FOR LINEAR SYSTEMS
!
      TYPE(BIEF_OBJ), TARGET :: UNK
!
!     BLOCKS OF DIFFERENTIATED UNKNOWNS FOR LINEAR SYSTEMS
!
      TYPE(BIEF_OBJ), TARGET :: ADUNK
!
!     BLOCK OF CLANDESTINE VARIABLES
!
      TYPE(BIEF_OBJ), TARGET :: VARCL
!
!     BLOCK OF VARIABLES FOR OUTPUT
!
      TYPE(BIEF_OBJ), TARGET :: VARSOR
!                                                       WAC2
!
!     BLOCK OF VARIABLES FOR SENDING TO TOMAWAC
!
      TYPE(BIEF_OBJ), TARGET :: TEL2TOM
!
!     BLOCK OF VARIABLES FOR RECEIVING FROM TOMAWAC
!
      TYPE(BIEF_OBJ), TARGET :: TOM2TEL
!
!     NR OF VARIBLES SEND TO TOMAWAC
!
      INTEGER :: NVARTEL2TOM
!
!     NR OF VARIBLES RECEIVED FROM TOMAWAC
!
      INTEGER :: NVARTOM2TEL
!
!-----------------------------------------------------------------------
!
!       4) INTEGERS
!
!-----------------------------------------------------------------------
!
!     NUMBER OF BREACH POINTS OF POLYLINE GIVEN IN BREACHES DATA FILE
!
      INTEGER, ALLOCATABLE :: NBLS(:)
!
!     MAXIMUM NUMBER OF SOURCES
!
      INTEGER MAXSCE
!
!     MAXIMUM NUMBER OF BOUNDARIES
!
      INTEGER MAXFRO
!
!     MAXIMUM NUMBER OF OUTPUT VARIABLES
!
      INTEGER, PARAMETER :: MAXVAR = 100
      INTEGER :: NVAR_T2D
!
!     MAXIMUM NUMBER OF TRACERS
!
      INTEGER MAXTRA
!
!     ADDRESS OF TRACERS IN VARSOR
!
      INTEGER :: ADR_TRAC
!
!     MAXIMUM NUMBER OF POINTS TO DEFINE SOURCES REGIONS
!
      INTEGER MAXPTSCE
!
!     NUMBER OF SOURCE REGIONS
!
      INTEGER NREG
!
!     NUMBER OF POINTS TO DEFINE SOURCE REGIONS
!
      INTEGER, ALLOCATABLE :: PTS_REG(:)
!
!     NUMBER OF POINTS OF THE MESH CONTAINED IN SOURCE REGIONS
!
      INTEGER, ALLOCATABLE :: TNP(:)
!
!     NODES NUMBER OF POINTS CONTAINED IN THE SOURCE REGIONS
!
      INTEGER, ALLOCATABLE :: PT_IN_POLY(:,:)
!
!     NUMBER OF NODES FOR THE CONTROL SECTIONS (TWO TIMES THE NUMBER OF CONTROL SECTIONS)
!
      INTEGER NCP
!
!     ARRAY CONTAINING THE GLOBAL NUMBER OF POINTS IN THE CONTROL SECTIONS
!
      INTEGER, ALLOCATABLE :: CTRLSC(:)
!
!     MAXIMUM RANK OF LOGICAL UNITS AS DECLARED IN SUBMIT STRINGS IN THE DICTIONARY
!     06/10/2015: 45
!     15/03/2016: 46
!     30/08/2016: 48
!     28/11/2017: 52   coupling with Nestor
!     09/10/2020: 53   output weirs discharge
!
      INTEGER, PARAMETER :: MAXLU_T2D = 60
!
!     GEOMETRY FILE NUMBER
!
      INTEGER, TARGET :: T2DGEO
!
!     BOUNDARY CONDITIONS FILE NUMBER
!
      INTEGER, TARGET :: T2DCLI
!
!     PREVIOUS COMPUTATION FILE NUMBER
!
      INTEGER, TARGET :: T2DPRE
!
!     RESULTS FILE NUMBER
!
      INTEGER, TARGET :: T2DRES
!
!     BOTTOM TOPOGRAPHY FILE NUMBER
!
      INTEGER T2DFON
!
!     BINARY DATA FILE 1,2
!
      INTEGER T2DBI1,T2DBI2
!
!     ASCII ATMOSPHERIC FILE
!
      INTEGER T2ATMA
!
!     BINARY ATMOSPHERIC FILE
!
      INTEGER, TARGET :: T2ATMB
!
!     FORMATTED DATA FILE 1,2
!
      INTEGER, TARGET :: T2DFO1,T2DFO2
!
!     BINARY RESULTS FILE NUMBER
!
      INTEGER T2DRBI
!
!     FORMATTED RESULTS FILE NUMBER
!
      INTEGER T2DRFO, T2DRF1, T2DRF2, T2DRF3, T2DRF4, T2DRF5, T2DRF6
!
!     REFERENCE FILE NUMBER
!
      INTEGER T2DREF
!
!     LIQUID BOUNDARIES FILE NUMBER
!
      INTEGER, TARGET :: T2DIMP
!
!     FRICTION DATA FILE NUMBER
!
      INTEGER T2DCOF
!
!     DELWAQ FILES NUMBERS
!
      INTEGER T2DDL1,T2DDL2,T2DDL3,T2DDL4,T2DDL5,T2DDL6,T2DDL7,T2DDL8
      INTEGER T2DDL9,T2DL10,T2DL11
!
!     STAGE-DISCHARGE CURVES FILE NUMBER
!
      INTEGER T2DMAB
!
!     SOURCES FILE NUMBER
!
      INTEGER T2DVEF
!
!     DATA SOURCES FILE NUMBER
!
      INTEGER T2DSDN
!
!     SECTIONS INPUT FILE NUMBER
!
      INTEGER T2DSEC
!
!     SECTIONS OUTPUT FILE NUMBER
!
      INTEGER T2DSEO
!
!     MIGRHYCAR STEERING FILE NUMBER
!
      INTEGER T2DMIG
!
!     HARMONIC CONSTANTS FILE NUMBER
!
      INTEGER T2DHAR
!
!     TIDAL MODEL FILE NUMBER
!
      INTEGER T2DTID
!
!     ASCII TIDAL MODEL DATABASE FILE NUMBER
!
      INTEGER T2DBDD
!
!     BINARY TIDAL MODEL DATABASES 1 AND 2 FILE NUMBER
!
      INTEGER T2DBB1,T2DBB2
!
!     WEIRS DATA FILE NUMBER
!
      INTEGER T2DSEU
!
!     WEIRS OUTPUT FILE NUMBER
!
      INTEGER T2DWOP
!
!     CULVERTS/TUBES/BRIDGES DATA FILE NUMBER
!
      INTEGER T2DBUS
!
!     BREACHES DATA FILE NUMBER
!
      INTEGER T2DBRC
!
!     ASCII AND BINARY DROGUES FILE
!
      INTEGER T2DFLO,T2DBLO
!
!     PREVIOUS DROGUES FILE
!
      INTEGER T2DPLO
!
!     DATA DROGUES POSITIONING ASCII FILE NUMBER
!
      INTEGER T2DPLY
!
!     ZONES FILE
!
      INTEGER T2DZFI
!
!     WAQ STEERING FILE (INTERNAL WAQ NOT THOSE OF DELWAQ)
!
!      INTEGER T2DWAQ
!
!     WAQ DICO (INTERN WAQ NOT THOSE OF DELWAQ)
!
!      INTEGER T2DWQD
!
!     KHIONE STEERING FILE
!
!      INTEGER T2DICE
!
!     KHIONE DICO
!
!      INTEGER T2DICD
!
!     FLUXLINE FILE NUMBER (NEW METHOD FOR CROSS SECTIONS)
!
      INTEGER T2DFLX
!
!     NESTOR ACTION FILE
!
      INTEGER T2NACT
!
!     NESTOR POLYGON FILE
!
      INTEGER T2NPOL
!
!     NESTOR REFERENCE LEVEL FILE
!
      INTEGER T2NREF
!
!     NESTOR RESTART FILE
!
      INTEGER T2NRST
!
!     LAMBERT 93 CONVERSION FILE
!
      INTEGER T2DL93
!
!     RESTART FILE
!
      INTEGER T2DRST
!
!     GRAPHIC PRINTOUT PERIOD
!
      INTEGER, TARGET ::  LEOPRD
!
!     LISTING PRINTOUT PERIOD
!
      INTEGER, TARGET :: LISPRD
!
!     PRINTOUT PERIOD FOR RESTART FILE
!
      INTEGER, TARGET :: RSTPRD
!
!     NUMBER OF TIME STEPS
!
      INTEGER, TARGET :: NIT
!
!     TYPE OF ADVECTION (1:u and v, 2:h, 3:tracers, 4:k and epsilon)
!
      INTEGER ICONVF(4)
!
!     SCHEME FOR ADVECTION OF TRACERS
!
      INTEGER, ALLOCATABLE :: ICONVFT(:)
!
!     TURBULENCE MODEL
!
      INTEGER, TARGET :: ITURB
!
!     LAW OF BOTTOM FRICTION
!
      INTEGER KFROT
!
!     NUMBER OF SUB-ITERATIONS FOR NON-LINEARITIES
!
      INTEGER NSOUI
!
!     NOT USED (PROPAGATION OPTION)
!
!     INTEGER OPTPRO
!
!     INITIAL GUESS FOR H
!
      INTEGER , TARGET :: IORDRH
!
!     INITIAL GUESS FOR U
!
      INTEGER , TARGET :: IORDRU
!
!     NUMBER OF SUB-ITERATIONS FOR NON-LINEARITIES
!
      INTEGER NSOUSI
!
!     NUMBER OF FIRST TIME STEP FOR GRAPHIC PRINTOUTS
!
      INTEGER , TARGET :: PTINIG
!
!     NUMBER OF FIRST TIME STEP FOR LISTING PRINTOUTS
!
      INTEGER PTINIL
!
!     TURBULENCE MODEL FOR SOLID BOUNDARIES
!
      INTEGER LISRUG
!
!     NUMBER OF BOUNDARIES WITH PRESCRIBED DISCHARGE
!
      INTEGER NDEBIT
!
!     NUMBER OF BOUNDARIES WITH PRESCRIBED ELEVATION
!
      INTEGER NCOTE
!
!     NUMBER OF BOUNDARIES WITH PRESCRIBED VELOCITY
!
      INTEGER NVITES
!
!     NUMBER OF BOUNDARIES WITH PRESCRIBED TRACER
!
      INTEGER NTRACE
!
!     NUMBER OF CLANDESTINE VARIABLES
!
      INTEGER NVARCL
!
!     VECTOR LENGTH
!
      INTEGER LVMAC
!
!     OPTION FOR THE TREATMENT OF TIDAL FLATS
!
      INTEGER OPTBAN
!
!     NUMBER OF DROGUES, MAXIMUM NUMBER OF DROGUES (FOR DIMENSIONING ARRAYS)
!
      INTEGER NFLOT,NFLOT_MAX
!
!     PRINTOUT PERIOD FOR DROGUES
!
      INTEGER FLOPRD
!
!     NUMBER OF LAGRANGIAN DRIFTS
!
      INTEGER NLAG
!
!     BOTTOM SMOOTHINGS
!
      INTEGER LISFON
!
!     DISCRETIZATIONS IN SPACE
!
      INTEGER DISCRE(5)
!
!     NUMBER OF SINK/SOURCES
!
      INTEGER NREJET
!
!     NUMBER OF SINK/SOURCES GIVEN BY THEIR NODE NUMBERS
!
      INTEGER NREJETI
!
!     NUMBER OF SINK/SOURCES WITH GIVEN VELOCITY
!
      INTEGER NREJEU
!
!     NUMBER OF SINK/SOURCES WITH GIVEN TRACER
!
      INTEGER NREJTR
!
!     SUPG OPTION
!
      INTEGER OPTSUP(4)
!
!     ORIGINAL DATE OF TIME
!
      INTEGER, TARGET :: MARDAT(3)
!
!     ORIGINAL HOUR OF TIME
!
      INTEGER, TARGET :: MARTIM(3)
!
!     ORIGINAL TIME OFFSET in SECONDS
!
!     DOUBLE PRECISION TEL_OFFSET
!
!     VARIOUS DISCRETISATION TIMES
!
      INTEGER IELM,IELM0,IELM1,IELMH,IELMU,IELMT,IELMK,
     &        IELME,IELMNU
!
!     MATRIX STORAGE
!
      INTEGER OPTASS
!
!     MATRIX-VECTOR PRODUCT
!
      INTEGER PRODUC
!
!     NUMBER OF WEIRS
!
      INTEGER NWEIRS
!
!     NUMBER OF NEIGHBOURS PROCESSORS IN CASE OF // (FOR WEIRS)
!
      INTEGER N_NGHB_WEIRS
!
!     NUMBER OF NODES USED FOR COMPUTATION,
!
      INTEGER NWEIRS_NODES
!
!     NUMBER OF NEIGHBOURS PROCESSORS IN CASE OF // (FOR WEIRS NODES)
!
      INTEGER N_NGHB_W_NODES
!
!     NUMBER OF NODES SEND IN CASE OF //
!
      INTEGER N_WN_SEND
!
!     NUMBER OF NEIGHBOURS PROCESSORS IN CASE OF // (FOR WEIRS NODES SEND)
!
      INTEGER N_NGHB_WN_SEND
!
!     NUMBER OF CULVERTS/SIPHONS
!
      INTEGER NBUSE
!
!     NUMBER OF BOUNDARIES WITH GIVEN OPTION FOR LIQUID BOUNDARIES
!
      INTEGER NTYPFR
!
!     OPTION FOR LIQUID BOUNDARIES
!
      INTEGER, ALLOCATABLE :: FRTYPE(:)
!
!     TREATMENT OF THE LINEAR SYSTEM
!
      INTEGER, TARGET ::  SOLSYS
!
!     VELOCITY PROFILES
!
      INTEGER, ALLOCATABLE :: PROVEL(:)
!
!     NUMBER OF LIQUID BOUNDARIES
!
      INTEGER NFRLIQ
!
!     NEAREST POINTS OF SOURCES
!
      INTEGER, ALLOCATABLE :: ISCE(:)
!
!     OPTION FOR THE DIFFUSION OF TRACERS
!
      INTEGER OPDTRA
!
!     OPTION FOR THE DIFFUSION OF VELOCITIES
!
      INTEGER OPDVIT
!
!     TYPE OF SOURCES
!
      INTEGER OPTSOU
!
!     NUMBER OF PRIVATE ARRAYS, NUMBER OF PRIVATE ARRAYS WITH GIVEN NAME
!
      INTEGER NPRIV,N_NAMES_PRIV
!
!     NUMBER OF DIFFERENTIATING ARRAYS, AND THOSE WITH A GIVEN NAME
!
      INTEGER NADVAR,N_NAMES_ADVAR
!
!     NUMBER OF DIRECTIONS FOR DIFFERENTIATING in VECTOR MODES
!
      INTEGER AD_NUMOFDIR
!
!     DELWAQ PRINTOUT PERIOD
!
      INTEGER WAQPRD
!
!     TREATMENT OF NEGATIVE DEPTHS
!
      INTEGER OPT_HNEG
!
!     CURRENT ITERATION NUMBER
!
      INTEGER, TARGET :: LT
!
!     RECORD NUMBER IN THE WAVE DRIVEN CURRENTS FILE
!
      INTEGER NPTH
!
!     NUMBER OF USER-DEFINED ZONES (E.G. FOR SETTING FRICTION) IN SUBROUTINE DEF_ZONES
!
      INTEGER NZONE
!
!     NUMBER OF PERIODS FOR FOURIER ANALYSIS
!
      INTEGER NPERIAF
!
!     OPTION FOR PARAMETER ESTIMATION, IDENTIFICATION METHOD
!
      INTEGER OPTID
!
!     NUMBER OF REMARKABLE POINTS
!
      INTEGER NPTS
!
!     LIST OF REMARKABLE POINTS
!
      INTEGER LIST_PTS(100)
!
!     CHOICE OF COST-FUNCTION
!
      INTEGER OPTCOST
!
!     MAXIMUM NUMBER OF ITERATIONS FOR IDENTIFICATION
!
      INTEGER MAXEST
!
!     COUPLING PERIOD (WITH SISYPHE)
!
      INTEGER, TARGET ::  PERCOU
!
!     COUPLING PERIOD FOR TOMAWAC
!
      INTEGER, TARGET :: PERCOU_WAC
!
!     FINITE VOLUME SCHEME
!
      INTEGER OPTVF
!
!     ORIGINS OF THE COORDINATE SYSTEM
!
      INTEGER I_ORIG,J_ORIG
!
!     NUMBER OF TRACERS
!
      INTEGER, TARGET :: NTRAC
!
!     NUMBER TOTAL OF TRACERS
!
      INTEGER NTRTOT
!
!     INDEX FOR TEMPERATURE, FOR SALINITY
!     IND_FT,IND_FC ?
      INTEGER IND_T,IND_S,IND_SEC
!
!     INDEX FOR SUSPENDED SEDIMENTS
!
      INTEGER IND_SED
!
!     INDEX FOR NON NEWTONIAN MODEL
!
      INTEGER IND_NN
!
!     NUMBER OF POINTS GIVEN FOR EACH DISCHARGE-ELEVATIONS CURVES
!
      INTEGER, ALLOCATABLE :: PTS_CURVES(:)
!
!     OPTION FOR TREATING STAGE-DISCHARGE CURVES
!
      INTEGER, ALLOCATABLE :: STA_DIS_CURVES(:)
!
!     DEBUGGER
!
      INTEGER, TARGET :: DEBUG
!
!     DEPTH IN FRICTION TERMS
!
      INTEGER HFROT
!
!     LAW OF FRICTION ON LATERAL BOUNDARIES
!
      INTEGER KFROTL
!
!     TREATMENT OF FLUXES AT THE BOUNDARIES
!
      INTEGER DIRFLU
!
!     OPTION FOR TIDAL BOUNDARY CONDITIONS
!
      INTEGER, ALLOCATABLE, TARGET :: BND_TIDE(:)
      INTEGER TIDALTYPE
!
!     OPTION FOR TSUNAMI GENERATION
!
      INTEGER OPTTSUNAMI
!
!     TIDAL DATA BASE
!
      INTEGER TIDALDB
!
!     GEOGRAPHIC SYSTEM
!
      INTEGER GEOSYST
!
!     ZONE NUMBER IN GEOGRAPHIC SYSTEM
!
      INTEGER NUMZONE
!
!     NUMBERS OF THE POINT TO CALIBRATE HIGH WATER (SCHEMATIC TIDES)
!
      INTEGER ICALHWB,ICALHWG
!
!     RECORD NUMBER FOR RESTART
!
      INTEGER, TARGET :: START_RECORD
!
!     RECORD NUMBER IN RESTART FILE
!
      INTEGER, TARGET :: RESTART_RECORD
!
!     NUMBER OF BREACHES
!
      INTEGER NBRECH
!
!     SPATIAL PROJECTION TYPE, AND A SAVE OF ITS ORIGINAL VALUE
!
      INTEGER PROTYP,PROTYP0
!
!     OPTION FOR CHARACTERISTICS,
!     NUMBER OF GAUSS POINTS FOR WEAK CHARACTERISTICS
!
      INTEGER OPTCHA,NGAUSS
!
!     MAXIMUM NUMBER OF ITERATIONS FOR ADVECTION SCHEMES
!
      INTEGER MAXADV
!
!     STOCHASTIC DIFFUSION MODEL (FOR PARTICLES ALGAE, OIL SPILLS...)
!
      INTEGER STOCHA
!
!     OPTION FOR WEIR TREATMENT
!
      INTEGER TYPSEUIL
!
!     STORAGE OF MAXIMUM NUMBER OF ELEMENTS ON ALL WEIRS
!
      INTEGER MAXNPS
!
!     PSI SCHEME OPTION
!
!     INTEGER OPTPSI
!
!     ADVECTION SCHEME OPTIONS FOR VELOCITY AND K-EPSILON AND SA
!
      INTEGER OPTADV_VI,OPTADV_KE,OPTADV_SA
!
!     ADVECTION SCHEME OPTIONS FOR TRACERS
!
      INTEGER, ALLOCATABLE :: OPTADV_TR(:)
!
!     OPTION FOR WIND
!
      INTEGER OPTWIND
!
!     NUMBER OF CORRECTIONS FOR DISTRIBUTIVE SCHEMES
!     NUMBER OF SUB-STEPS FOR DISTRIBUTIVE SCHEMES
!
      INTEGER NCO_DIST,NSP_DIST
!
!     COUNTER FOR GRAPHICAL AND LISTING OUTPUTS
!
      INTEGER, TARGET :: COMPLEO,COMPLIS
!
!     OPTION FOR THE TREATMENT OF CULVERTS
!
      INTEGER OPTBUSE
!
!     OPTION FOR HYDROSTATIC RECONSTRUCTION
!
      INTEGER HROPT
!
!     OPTION FOR RAINFALL-RUNOFF MODEL
!
      INTEGER RUNOFFOPT
!
!     ANTECEDENT MOISTURE CONDITION (FOR SCS_CN AND HORTON RAINFALL-RUNOFF MODELS)
!
      INTEGER AMC
!
!     RATIO FOR INITIAL ABSTRACTION (FOR SCS_CN RAINFALL-RUNOFF MODEL)
!
      INTEGER IASCNOPT
!
!     NUMBER OF REFINEMENT LEVELS FOR THE CONVERGENCE STUDY
!     CURRENT LEVEL
!
      INTEGER RLEVELS,RLEVEL
!
!     CHOICE OF THE NUMERICAL SCHEME FOR FINITE VOLUME
!
      INTEGER ICIN
!
!     CHOICE OF SPACE AND TIME ORDER FOR FINITE VOLUME
!
      INTEGER SORDER, TORDER
!
!     CHOICE OF FLUX LIMITOR FOR SECOND ORDER IN SPACE
!
      INTEGER ILIMHZ, ILIMUV, ILIMT
!
!     WEAK OR STRONG IMPOSITION OF KINETIC SCHEME BND CONDITION
!
      INTEGER BNDCIN
!
!     NON NEWTONIAN MODEL
!
      INTEGER NONNEWTMODEL,OPTBGHM
!
!     DIFFUSION OF VELOCITIES IN FINITE VOLUME
!
      INTEGER MVISUV
!
!     DIFFUSION OF TRACERS IN FINITE VOLUME
!
      INTEGER, ALLOCATABLE :: MVIST(:)
!
!     DIFFUSION LOCAL VARIABLE IN VOLFIN
!
      INTEGER :: IVIS
!
!     OPTION FOR DIRICHLET CONDITION IN FV DIFFUSION
!
      INTEGER BNDTYP
!
!     OPTION FOR THE RTPF SCHEME RECONSTRUCTIONS
!
      INTEGER OPTRTPF
!
!-----------------------------------------------------------------------
!
!       5) LOGICAL VALUES
!
!-----------------------------------------------------------------------
!
!     USED IN DEBSCE
!
      LOGICAL, ALLOCATABLE :: OKDEBSCE(:)
!
!     USED IN TRSCE
!
      LOGICAL, ALLOCATABLE :: OKTRSCE(:,:)
!
!     USED IN Q
!
      LOGICAL, ALLOCATABLE :: OKQ(:)
!
!     USED IN SL
!
      LOGICAL, ALLOCATABLE :: OKSL(:)
!
!     USED IN TR
!
      LOGICAL, ALLOCATABLE :: OKTR(:,:)
!
!     USED IN VIT
!
      LOGICAL, ALLOCATABLE :: OKVIT(:)
!
!     IF YES, WATER DISCHARGE OF SOURCES IS GIVEN
!
      LOGICAL OKREJET
!
!     IF YES, COMPUTATION CONTINUED
!
      LOGICAL DEBU
!
!     IF YES, LISTING PRINTOUT IS REQUIRED
!
      LOGICAL LISTIN
!
!     IF YES, DIFFUSION OF VELOCITY
!
      LOGICAL DIFVIT
!
!     IF YES, AIR PRESSURE IS TAKEN INTO ACCOUNT
!
      LOGICAL ATMOS
!
!     IF YES, ADVECTION
!
      LOGICAL CONV
!
!     IF YES, ADVECTION OF U AND V (1), H (2), TRACERS (3), K AND EPSILON (4)
!
      LOGICAL CONVV(4)
!
!     IF YES, DIFFUSION OF TRACERS
!
      LOGICAL DIFT
!
!     IF YES, CORIOLIS
!
      LOGICAL CORIOL
!
!     IF YES, INFORMATION PRINTED ON LISTING
!
      LOGICAL INFOGR
!
!     IF YES, MASS-BALANCE
!
      LOGICAL BILMAS
!
!     IF YES, H CLIPPING
!
      LOGICAL CLIPH
!
!     IF YES, WIND IS TAKEN INTO ACCOUNT
!
      LOGICAL VENT
!
!     IF YES, PROPAGATION
!
      LOGICAL PROPA
!
!     IF YES, SPHERICAL COORDINATES
!
      LOGICAL SPHERI
!
!     IF YES, LINEARISED PROPAGATION
!
      LOGICAL PROLIN
!
!     IF YES, VALIDATION
!
      LOGICAL VALID
!
!     IF YES, VERIFICATION OF LIMITS
!
      LOGICAL VERLIM
!
!     IF YES, CONTINUITY CORRECTION
!
      LOGICAL CORCON
!
!     IF YES, INITIAL TIME SET TO ZERO
!
      LOGICAL, TARGET :: RAZTIM
!
!     IF YES, INFORMATION ABOUT K-EPSILON MODEL PRINTED ON LISTING
!
      LOGICAL INFOKE
!
!     IF YES, INFORMATION ABOUT SPALART-ALLMARAS MODEL PRINTED ON LISTING
!
      LOGICAL INFONU
!
!     IF YES, THERE ARE MASKED ELEMENTS
!
      LOGICAL MSK
!
!     IF YES, STOP WHEN A STEADY STATE IS REACHED
!
      LOGICAL STOPER
!
!     IF YES, ELEMENTS MASKED BY USER
!
      LOGICAL MSKUSE
!
!     TO KNOW IF A VARIABLE WILL BE EXITED ON FILE, ON LISTING
!
      LOGICAL SORLEO(MAXVAR),SORIMP(MAXVAR)
!
!     ARRAYS SAYING IF A VARIABLE IS TO BE PRINTED IN RESULTS FILE
!     OR LISTING
!
      LOGICAL SOREST(MAXVAR),SORIS2(MAXVAR)
!
!     VARIABLE DENSITY. IF YES, DENSITY EFFECTS INCLUDED
!
      LOGICAL ROVAR
!
!     TIDE GENERATING FORCE
!
      LOGICAL MAREE
!
!     IF YES, THERE IS A TREATMENT OF BOUNDARY CONDITIONS WITH
!     THOMPSON METHOD
!
      LOGICAL THOMFR
!
!     IF YES, C-U PRECONDITIONING
!
      LOGICAL PRECCU
!
!     IF YES, VARIABLE TIME-STEP
!
      LOGICAL DTVARI
!
!     IF YES, TIDAL FLATS
!
      LOGICAL BANDEC
!
!     IF YES, PRINT INFORMATIONS ON LISTING
!
      LOGICAL ENTET
!
!     IF YES, OIL SPILL MODEL
!
      LOGICAL SPILL_MODEL
!
!     IF YES, WAVE DRIVEN CURRENTS ARE TAKEN INTO ACCOUNT
!
      LOGICAL COUROU
!
!     IF YES, WAVE FRICTION ENHANCEMENT IS TAKEN INTO ACCOUNT
!
      LOGICAL FRICOU
!
!     IF YES, VERTICAL STRUCTURES ARE TAKEN INTO ACCOUNT
!
      LOGICAL VERTIC
!
!     IF YES, THE USER WANTS TO DEFINE ZONES
!
      LOGICAL DEFZON
!
!     IF YES, COMPATIBLE COMPUTATION OF FLUXES (RELATED TO FLUXES THROUGH SECTIONS)
!
      LOGICAL COMFLU
!
!     IF YES, PRINTS CUMULATED FLOWRATES
!
      LOGICAL CUMFLO
!
!     IF YES, OUTPUT OF SALINITY FOR DELWAQ
!
      LOGICAL SALI_DEL
!
!     IF YES, OUTPUT OF TEMPERATURE FOR DELWAQ
!
      LOGICAL TEMP_DEL
!
!     IF YES, OUTPUT OF VELOCITY FOR DELWAQ
!
      LOGICAL VELO_DEL
!
!     IF YES, OUTPUT OF DIFFUSIVITY FOR DELWAQ
!
      LOGICAL DIFF_DEL
!
!     IF YES, RAIN OR EVAPORATION TAKEN INTO ACCOUNT
!
      LOGICAL RAIN
!
!     IF YES, INFERENCE OF MINOR CONSTITUENTS
!
      LOGICAL INTMICON
!
!     IF YES, THE USER WANTS TO DEFINE BREACHES
!
      LOGICAL BRECHE
!
!     IF YES, THE PARTICLES ARE ALGAE
!
      LOGICAL ALGAE
!
!     SECONDARY CURRENTS
!
      LOGICAL , TARGET :: SECCURRENTS
!
!     IF YES, CROSS SECTIONS WITH FLUXLINE METHOD
!
      LOGICAL DOFLUX
!
!     OPTION FOR CONVERGENCE STUDIES
!
      LOGICAL CONVERGENCE
!
!     IF YES KEEP LONG LAT IN RESULT FILE
!
      LOGICAL KEEP_LONLAT
!
!     IF YES, USE NESTOR
!
      LOGICAL , TARGET :: NESTOR
!
!     IF YES, COEFFICIENT OF WIND INFLUENCE VARIES WITH WIND SPEED
!
      LOGICAL FAIRACCU
!
!     IF YES, BOTTOM SMOOTHINGS ARE DONE AFTER MODIFICATIONS BY THE USER
!
      LOGICAL LISFON_AFTER
!
!     IF YES, INITIAL VELOCITIES ARE COMPUTED FROM OSU TIDAL SOLUTIONS
!     E.G. TPXO. OTHERWISE = 0.
!
      LOGICAL VITINI_TPXO
!
!     NON-NEWTONIAN MODEL
!
      LOGICAL NN_BIPHASIC
!
!     NORMAL TO THE SEMI-WALL (CDL_FV)
!
      LOGICAL, ALLOCATABLE :: YESNOFR(:)
!
!     IF YES, ASCII OR BINARY ATMOSPHERIC DATA FILE FORMAT IS FREE,
!     NOT THE MANDATORY ONES IN METEO_TELEMAC MODULE
!
      LOGICAL FREE_ATMO
!
!     RESTART MODE (TO GENERATE A RESTART FILE)
!
      LOGICAL RESTART_MODE
!
!     IF YES, MAXIMUM VALUES LIKE MAXZ, TMXZ, MAXV, TMXV ONLY COMPUTED
!     FROM PREVIOUS COMPUTATION FILE AND CURRENT COMPUTATION
!
      LOGICAL MAX_PREV
!
!-----------------------------------------------------------------------
!
!       6) REALS
!
!-----------------------------------------------------------------------
!
!     TIME STEP
!
      DOUBLE PRECISION, TARGET :: DT, DTCAS,DTN
!
!     END TIME
!
      DOUBLE PRECISION, TARGET :: TMAX
!
!     INITIAL TIME STEP
!
      DOUBLE PRECISION DTINI
!
!     GRAVITY ACCELERATION
!
      DOUBLE PRECISION GRAV
!
!     FRICTION COEFFICIENT
!
      DOUBLE PRECISION FFON
!
!     COEFFICIENT OF CORIOLIS
!
      DOUBLE PRECISION FCOR
!
!     COEFFICIENT OF WIND INFLUENCE
!
      DOUBLE PRECISION, TARGET :: FAIR
!
!     COMPONENTS OF WIND VELOCITY,ITS NORM AND DIRECTION
!     REPLACED BY CST_WINDX,CST_WINDY,CST_WINDS,CST_WINDD
!     IN METEO_TELEMAC MODULE
!
!     DOUBLE PRECISION FUAIR,FVAIR,WIND_SPD(2)
      DOUBLE PRECISION WIND_SPD(2)
!
!     INITIAL VALUES OF TRACERS
!
      DOUBLE PRECISION, ALLOCATABLE :: TRAC0(:)
!
!     COEFFICIENT FOR DIFFUSION OF TRACERS
!
      DOUBLE PRECISION, ALLOCATABLE :: DIFNU(:)
!
!     IMPLICITATION FOR TRACERS
!
      DOUBLE PRECISION TETAT
!
!     VELOCITY DIFFUSIVITY
!
      DOUBLE PRECISION, TARGET ::  PROPNU
!
!     THRESHOLD VALUES FOR STOPPING THE COMPUTATION
!
      DOUBLE PRECISION BORNES(8)
!
!     IMPLICITATION FOR DEPTH
!
      DOUBLE PRECISION TETAC
!
!     IMPLICITATION FOR VELOCITY
!
      DOUBLE PRECISION TETAU
!
!     IMPLICITATION FOR DIFFUSION OF VELOCITY
!
      DOUBLE PRECISION TETAD
!
!     MASS-LUMPING COEFFICIENT ON H
!
      DOUBLE PRECISION AGGLOC
!
!     MASS-LUMPING COEFFICIENT ON VELOCITY
!
      DOUBLE PRECISION AGGLOU
!
!     MASS-LUMPING FOR WEAK CHARACTERISTICS
!
      DOUBLE PRECISION AGGLOW
!
!     MINIMUM VALUE OF DEPTH
!
      DOUBLE PRECISION HMIN
!
!     TIME STEP REDUCTION FOR K-EPSILON MODEL
!
!     DOUBLE PRECISION REDUC
!
!     MEAN DEPTH FOR LINEARIZATION
!
      DOUBLE PRECISION HAULIN
!
!     WATER DENSITY
!
      DOUBLE PRECISION ROEAU
!
!     LATITUDE OF ORIGIN POINT
!
      DOUBLE PRECISION LAMBD0
!
!     ROUGHNESS COEFFICIENT OF BOUNDARIES
!
      DOUBLE PRECISION SB
!
!     INITIAL ELEVATION
!
      DOUBLE PRECISION COTINI
!
!     INITIAL DEPTH
!
      DOUBLE PRECISION HAUTIN
!
!     PRESCRIBED FLOWRATES
!
      DOUBLE PRECISION, ALLOCATABLE, TARGET :: DEBIT(:)
!
!     PRESCRIBED ELEVATIONS
!
      DOUBLE PRECISION, ALLOCATABLE, TARGET :: COTE(:)
!
!     PRESCRIBED VELOCITIES
!
      DOUBLE PRECISION, ALLOCATABLE ::  VITES(:)
!
!     PRESCRIBED TRACERS VALUES
!
      DOUBLE PRECISION, ALLOCATABLE :: TRACER(:)
!
!     FLUXES AT BOUNDARIES
!
      DOUBLE PRECISION, ALLOCATABLE, TARGET :: FLUX_BOUNDARIES(:)
!
!     ABSCISSAE, ORDINATES OF SOURCES
!
      DOUBLE PRECISION, ALLOCATABLE :: XSCE(:),YSCE(:)
!
!     ABSCISSAE, ORDINATES OF POINTS FOR SOURCES REGIONS
!
      DOUBLE PRECISION, ALLOCATABLE :: XCOO(:,:),YCOO(:,:)
!
!     AREA OF POINTS INSIDE SOURCES REGIONS
!
      DOUBLE PRECISION, ALLOCATABLE :: AREA_P(:)
!
!     SOURCES WATER DISCHARGES TAKEN FROM THE STEERING FILE
!
      DOUBLE PRECISION, ALLOCATABLE ::  DSCE(:)
!
!     SOURCES DISCHARGES WITH VARIATION IN TIME
!
      DOUBLE PRECISION, ALLOCATABLE :: DSCE2(:)
!
!     SOURCES TRACER DISCHARGES TAKEN FROM THE STERING FILE
!
      DOUBLE PRECISION, ALLOCATABLE :: TSCE(:,:)
!
!     SOURCES OF TRACERS WITH VARIATIONS IN TIME
!
      DOUBLE PRECISION, ALLOCATABLE :: TSCE2(:,:)
!
!     VELOCITIES OF THE SOURCES ALONG X,Y
!
      DOUBLE PRECISION, ALLOCATABLE :: USCE(:),VSCE(:)
!
!     UPWIND COEFFICIENTS FOR SUPG (1:u and v, 2:h, 3:tracers, 4:k and epsilon)
!
!     DOUBLE PRECISION COSUPG(4)
!
!     STOP CRITERIA (ORDER: H,U AND V,T)
!
      DOUBLE PRECISION CRIPER(3)
!
!     REFERENCE TEMPERATURE FOR COMPUTING DENSITY
!
      DOUBLE PRECISION TMOY
!
!     DIRECTION OF NORTH, COUNTER-CLOCK-WISE, STARTING FROM VERTICAL AXIS
!
      DOUBLE PRECISION NORD
!
!     NON-DIMENSIONAL DISPERSION COEFFICIENTS
!
      DOUBLE PRECISION ELDER(2)
!
!     LONGITUDE OF ORIGIN POINT
!
      DOUBLE PRECISION PHI0
!
!     MASS-LUMPING ON TRACERS
!
      DOUBLE PRECISION AGGLOT
!
!     DURATION OF COMPUTATION
!
      DOUBLE PRECISION DUREE
!
!     DESIRED COURANT NUMBER
!
      DOUBLE PRECISION CFLWTD
!
!     DESIRED FOURIER NUMBER
!
      DOUBLE PRECISION FWTD
!
!     MINIMUM DEPTH TO TAKE WIND INTO ACCOUNT
!
      DOUBLE PRECISION HWIND
!
!     THRESHOLD FOR NEGATIVE DEPTHS
!
      DOUBLE PRECISION HNEG
!
!     FREE SURFACE GRADIENT COMPATIBILITY
!
      DOUBLE PRECISION TETAZCOMP
!
!     TIME RANGE FOR FOURIER ANALYSIS
!
      DOUBLE PRECISION TAFBGN,TAFEND
!
!     CURRENT TIME, INITIAL TIME
!
      DOUBLE PRECISION, TARGET ::  AT,AT0
!
!     FOURIER ANALYSIS PERIODS
!
      DOUBLE PRECISION PERIAF(50)
!
!     ARRAY OF REALS TO READ INTO SELAFIN FILES
!
      REAL, ALLOCATABLE :: W(:)
!
!     TOLERANCES FOR IDENTIFICATION
!
      DOUBLE PRECISION TOLEST(4)
!
!     NEWMARK TIME INTEGRATION COEFFICIENT
!
      DOUBLE PRECISION GAMMA
!
!     ARRAY WITH STAGE-DISCHARGE CURVES
!
      DOUBLE PRECISION, ALLOCATABLE :: QZ(:,:,:)
!
!     RAIN OR EVAPORATION IN MM PER DAY
!     REPLACED BY CST_RAINFALL IN METEO_TELEMAC MODULE)
!
!     DOUBLE PRECISION RAIN_MMPD
!
!     PHYSICAL CHARACTERISTICS OF THE TSUNAMI
!
      DOUBLE PRECISION COETSUNAMI(10)
!
!     VALUES OF TRACERS IN THE RAIN
!
      DOUBLE PRECISION, ALLOCATABLE :: TRAIN(:)
!
!     COEFFICIENT TO CALIBRATE TIDAL RANGE
!
      DOUBLE PRECISION, TARGET :: CTIDE
!
!     COEFFICIENT TO CALIBRATE TIDAL VELOCITIES
!
      DOUBLE PRECISION, TARGET :: CTIDEV
!
!     COEFFICIENT TO CALIBRATE SEA LEVEL
!
      DOUBLE PRECISION, TARGET :: MSL
!
!     MINIMUM DEPTH TO COMPUTE TIDAL VELOCITIES BOUNDARY CONDITIONS
!
      DOUBLE PRECISION HMIN_VIT_BC
!
!     MINIMUM DEPTH TO COMPUTE TIDAL VELOCITIES INITIAL CONDITIONS
!
      DOUBLE PRECISION HMIN_VIT_IC
!
!     THRESHOLD DEPTH FOR RECEDING PROCEDURE
!
      DOUBLE PRECISION HREC
!
!     DIAMETRE OF ALGAE (PER CLASS)
!
      DOUBLE PRECISION, ALLOCATABLE :: DALGAE(:)
!
!     DENSITY OF ALGAE (PER CLASS)
!
      DOUBLE PRECISION, ALLOCATABLE :: RALGAE(:)
!
!     THICKNESS OF ALGAE (PER CLASS)
!
      DOUBLE PRECISION, ALLOCATABLE :: EALGAE(:)
!
!     TIME OF RELEASE OF ALGAE (PER CLASS)
!
      DOUBLE PRECISION, ALLOCATABLE :: TALGAE(:)
!
!     ALGAE TYPES (PER CLASS)
!
      INTEGER         , ALLOCATABLE :: YALGAE(:)
!
!     ALGAE RELEASE TYPES (PER CLASS)
!
      INTEGER         , ALLOCATABLE :: REL_ALGAE(:)
!
!     WAVE SHEAR STRESS FOR ALGAE DISLODGEMENT 1
!
      DOUBLE PRECISION, ALLOCATABLE :: TW1_ALGAE(:)
!
!     WAVE SHEAR STRESS FOR ALGAE DISLODGEMENT 2
!
      DOUBLE PRECISION, ALLOCATABLE :: TW2_ALGAE(:)
!
!     RATE OF DEGRADATION CONSTANT FOR ALGAE
!
      DOUBLE PRECISION, ALLOCATABLE :: A_ALGAE(:)
!
!     VALUE OF THE ATMOSPHERIC PRESSURE
!     REPLACED BY CST_PATMOS IN METEO_TELEMAC MODULE)
!
!     DOUBLE PRECISION PATMOS_VALUE
!
!     PRODUCTION COEFFICIENT FOR SECONDARY CURRENTS
!     DISSIPATION COEFFICIENT FOR SECONDARY CURRENTS
!
      DOUBLE PRECISION SEC_AS,SEC_DS
!
!     VON KARMAN CONSTANT
!
      DOUBLE PRECISION KARMAN
!
!     DURATION OF RAIN OR EVAPORATION IN HOURS
!
      DOUBLE PRECISION RAIN_HDUR
!
!     DECAY CONSTANT FOR HORTON MODEL
!
      DOUBLE PRECISION KDECAY
!
!     INITIAL AND SATURATED WATER CONTENTS
!
      DOUBLE PRECISION THETAI, THETAS
!
!     SUCTION FOR GREEN-AMPT MODEL
!
      DOUBLE PRECISION HF
!
!     TOLERANCE FOR FV SCHEME WETTING AND DRYING
!
      DOUBLE PRECISION EPS_FV
!
!     ALLOCATABLE ARRAYS WITH DIMENSION MAXTRA, FOR TRACERS
!
!     MASSOU: MASS CREATED BY SOURCE TERM DURING THE TIME STEP
!     MASTR0: INITIAL MASS
!     MASTR2: CURRENT MASS
!     MASTEN: MASS ENTERED THROUGH BOUNDARIES
!     MASTOU: TOTAL MASS CREATED BY SOURCE TERM
!     MASTRAIN: TOTAL MASS BROUGHT BY RAIN OR EVAPORATION
!     FLUTENT AND FLUTSOR: FOR FINITE VOLUMES
!
      DOUBLE PRECISION, ALLOCATABLE :: MASSOU(:)  ,MASTR0(:)
      DOUBLE PRECISION, ALLOCATABLE :: MASTR2(:)  ,FLUTSOR(:)
      DOUBLE PRECISION, ALLOCATABLE :: MASTEN(:)  ,MASTOU(:)
      DOUBLE PRECISION, ALLOCATABLE :: MASTRAIN(:),FLUTENT(:)
!
!     SOME PARAMETERS FOR SA TURBULENCE MODEL
!
      DOUBLE PRECISION :: SIGMANU = 2.D0/3.D0
      DOUBLE PRECISION :: NUMIN = 1.D-8
      DOUBLE PRECISION :: NUMAX = 1.D10
!
!     CALIBRATION COEFFICIENTS FOR THE 2D MIXING LENGTH TURBULENCE MODEL
!
      DOUBLE PRECISION CALMIXLENGTH(2)
!
!     NON-NEWTONIAN MODEL
!
      DOUBLE PRECISION NN_VISC,NN_YIELD,NN_K,NN_N,NN_RHO
!
!     NORMAL TO THE SEMI-WALL (CDL_FV)
!
      DOUBLE PRECISION, ALLOCATABLE :: VNX1(:),VNY1(:)
!
!     RELAXATION COEFFICIENT FOR STAGE-DISCHARGE CURVES
!
      DOUBLE PRECISION RELAX_STA_DIS
!
!     EXTRAPOLATION COEFFICIENT FOR ORDRE 2
!
      DOUBLE PRECISION BETA
!
!     TEST TIME STEP BIGGER THAN GRAPHIC OUTPUT
!
      DOUBLE PRECISION GPRDTIME
!
!-----------------------------------------------------------------------
!
!       7) STRINGS
!
!-----------------------------------------------------------------------
!
!     TITLE OF STUDY
!
      CHARACTER(LEN=72) TITCAS
!
!     VARIABLES FOR GRAPHIC PRINTOUT
!
      CHARACTER(LEN=72) VARDES
!
!     INITIAL CONDITIONS
!
      CHARACTER(LEN=72) CDTINI
!
!     VARIABLES TO BE PRINTED
!
      CHARACTER(LEN=72) VARIMP
!
!     EQUATIONS
!
      CHARACTER(LEN=20), TARGET :: EQUA
!
!     NAMES OF CLANDESTINE VARIABLES
!
      CHARACTER(LEN=32) VARCLA(10)
!
!     NAMES AND UNITS OF VARIABLES
!
      CHARACTER(LEN=32) TEXTE(MAXVAR),TEXTPR(MAXVAR)
!
!     NAMES OF REMARKABLE POINTS
!
      CHARACTER(LEN=32) NAME_PTS(100)
!
!     NAMES OF TRACERS
!
      CHARACTER(LEN=32), ALLOCATABLE :: NAMETRAC(:)
!
!     NAMES OF PRIVATE ARRAYS (GIVEN BY USER)
!
      CHARACTER(LEN=32) NAMES_PRIVE(4)
!
!     NAMES OF DIFFERENTING ARRAYS (GIVEN BY USER)
!
      CHARACTER(LEN=32) NAMES_ADVAR(MAXVAR)
!
!-----------------------------------------------------------------------
!
!       8) SLVCFG STRUCTURES
!
!-----------------------------------------------------------------------
!
!     STRUCTURE WITH SOLVER FOR PROPAGATION
!
      TYPE(SLVCFG) :: SLVPRO
!
!     STRUCTURE WITH SOLVER OPTIONS FOR K
!
      TYPE(SLVCFG) :: SLVK
!
!     STRUCTURE WITH SOLVER OPTIONS FOR E
!
      TYPE(SLVCFG) :: SLVEP
!
!     STRUCTURE WITH SOLVER OPTIONS FOR SA
!
      TYPE(SLVCFG) :: SLVNU
!
!     SOLVER FOR DIFFUSION OF TRACERS
!
      TYPE(SLVCFG), ALLOCATABLE :: SLVTRA(:)
!
!-----------------------------------------------------------------------
!
!       9) MESH STRUCTURE
!
!-----------------------------------------------------------------------
!
!     MESH STRUCTURE
!
      TYPE(BIEF_MESH), TARGET :: MESH
!
!     FINE MESH STRUCTURE IN CASE OF CONVERGENCE STUDY
!
      TYPE(BIEF_MESH), TARGET :: FINEMESH
!
!-----------------------------------------------------------------------
!
!      10) ALIASES
!
!-----------------------------------------------------------------------
!
!     DECLARATION OF POINTERS FOR ALIASES.
!     TARGETS ARE DEFINED IN POINT_TELEMAC2D.
!
!     ALIASES FOR WORKING VECTORS IN TB
!
      TYPE(BIEF_OBJ),POINTER :: T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11
      TYPE(BIEF_OBJ),POINTER :: T12,T13,T14,T15,T16,T17,T18,T19,T20
      TYPE(BIEF_OBJ),POINTER :: T21,T22
!
!     ALIASES FOR VECTOR IN BLOCK PRIVE
!
      DOUBLE PRECISION,POINTER :: PRIVE1(:),PRIVE2(:)
      DOUBLE PRECISION,POINTER :: PRIVE3(:),PRIVE4(:)
!
!     CONNECTIVITY TABLE
!
      TYPE(BIEF_OBJ), POINTER :: IKLE
!
!     COORDINATES OF POINTS IN THE MESH
!
      DOUBLE PRECISION, DIMENSION(:), POINTER :: X,Y
!
!     NUMBER OF ELEMENTS IN THE MESH
!
      INTEGER, POINTER:: NELEM
!
!     MAXIMUM NUMBER OF ELEMENTS IN THE MESH
!
      INTEGER, POINTER:: NELMAX
!
!     NUMBER OF BOUNDARY POINTS IN THE MESH
!
      INTEGER, POINTER:: NPTFR
      INTEGER NPTFR2
!
!     MAXIMUM NUMBER OF BOUNDARY POINTS IN THE MESH
!
      INTEGER, POINTER:: NPTFRX
!
!     TYPE OF ELEMENT
!
      INTEGER, POINTER:: TYPELM
!
!     NUMBER OF POINTS IN THE MESH
!
      INTEGER, POINTER:: NPOIN
!
!     MAXIMUM NUMBER OF POINTS IN THE MESH
!
      INTEGER, POINTER:: NPMAX
!
!     MAXIMUM NUMBER OF POINTS NEIGHBOURS OF A POINT
!
      INTEGER, POINTER:: MXPTVS
!
!     MAXIMUM NUMBER OF ELEMENTS NEIGHBOURS OF A POINT
!
      INTEGER, POINTER:: MXELVS
!
!     VECTOR LENGTH OF THE MACHINE
!
      INTEGER, POINTER:: LV
!
!     NUMBER OF SEGMENT IN A MESH
!
      INTEGER, POINTER:: NSEG
!
!=======================================================================
!
!       ADDED DECLARATIONS FOR THE IDENTIFICATION OF PARAMETERS
!
!
!-----------------------------------------------------------------------
!
!       1) VECTORS
!
!-----------------------------------------------------------------------
!
!     ADJOINT VARIABLES
!
      TYPE(BIEF_OBJ), TARGET :: PP,QQ,RR
!
!     MEASUREMENTS
!
      TYPE(BIEF_OBJ), TARGET :: UD,VD,HD
!
!     DIRECT VARIABLES AT ITERATION IT
!
      TYPE(BIEF_OBJ), TARGET :: UU,VV,HH
!
!     DIRECT VARIABLES AT ITERATION IT+1
!
      TYPE(BIEF_OBJ), TARGET :: UIT1,VIT1,HIT1
!
!     BOUNDARY VALUES FOR ADJOINT VARIABLE (ONLY DIRICHLET)
!
      TYPE(BIEF_OBJ), TARGET :: PBOR,QBOR,RBOR
!
!     VECTOR USED TO CHANGE THE SET OF STRICKLERS
!
      TYPE(BIEF_OBJ) :: DESC
!
!     GRADIENT OF COST FUNCTION (ITERATION K)
!
      TYPE(BIEF_OBJ) :: GRADJ
!
!     GRADIENT OF COST FUNCTION (ITERATION K-1)
!
      TYPE(BIEF_OBJ) :: GRADJN
!
!     SET OF STRICKLERS (ZONES): NEW
!
      TYPE(BIEF_OBJ) :: SETSTR
!
!     SET OF STRICKLERS' (ZONES): OLD
!
      TYPE (BIEF_OBJ) :: SETSTR2
!
!     GRADIENTS
!
      TYPE(BIEF_OBJ) :: ALPHA1,ALPHA2,ALPHA3
!
!     VARIABLES TRANSMITTED FROM TOMAWAC TO SISYPHE
!
      TYPE(BIEF_OBJ), TARGET :: DIRMOY,HM0,TPR5,ORBVEL,COSDIR,SINDIR
!
!     VARIABLES TRANSMITTED FROM SISYPHE TO TELEMAC
!
      TYPE(API_CPL), TARGET :: SIS_CPL
!
!     VARIABLES TRANSMITTED FROM GAIA TO TELEMAC
!
      TYPE(API_CPL), TARGET :: GAI_CPL
!
!-----------------------------------------------------------------------
!
!       2) MATRICES
!
!-----------------------------------------------------------------------
!
!       MATRICES
!
!       SYSTEM SOLVED WILL BE :
!
!     ( TAM1  TCM1  TCM2 )   (PP )      ( CV1 )
!     (                  )   (   )      (     )
!     ( TBM1  TAM2  A23  )   (QQ )  =   ( CV2 )
!     (                  )   (   )      (     )
!     ( TBM2  A32   TAM3 )   (RR )      ( CV3 )
!
!
!     MATRICES FOR ADJOINT SYSTEM
!
      TYPE(BIEF_OBJ), TARGET :: TAM1,TAM2,TAM3,TBM1,TBM2,TCM1,TCM2
!
!-----------------------------------------------------------------------
!
!       3) BLOCKS
!
!-----------------------------------------------------------------------
!
!     BLOCKS OF MATRICES, RIGHT HAND SIDES AND UNKNOWNS
!     FOR LINEAR SYSTEMS
!
!     BLOCKS OF MATRICES, RIGHT HAND SIDES FOR LINEAR SYSTEMS
!
      TYPE(BIEF_OBJ), TARGET :: MATADJ
!
!     BLOCKS OF UNKNOWNS FOR LINEAR SYSTEMS
!
      TYPE(BIEF_OBJ), TARGET :: UNKADJ
!
!     BLOCK OF ADJOINT VARIABLES FOR OUTPUT
!
      TYPE(BIEF_OBJ), TARGET :: VARSORA
!
!     BLOCK OF DIRICHLET CONDITION FOR ADJOINT VARIABLES
!
      TYPE(BIEF_OBJ), TARGET :: ADJDIR
!
!-----------------------------------------------------------------------
!
!     4) INTEGERS
!
!     NUMBER OF VARIABLES FOR LITENR (READ BY SKIPGEO)
!
      INTEGER NVARRES
!
!     NUMBER OF ITERATIONS FOR PARAMETERS CALIBRATION
!
      INTEGER NITERA
!
!-----------------------------------------------------------------------
!
!     5) LOGICALS
!
!     IF YES: ACTIVATES THE ADJOINT MODE IN TELEMAC2D/PROPAG
!
      LOGICAL ADJO
!
!     WHETHER THE ADJOINT SYSTEM RESULTS ARE PRINTED; NB 100=MAXVAR
!
      LOGICAL SORLEOA(100)
!
!     WHETHER ...; NB 100=MAXVAR
!
      LOGICAL SORIMPA(100)
!
!     FOR TRACERS IMPLICIT SOURCE TERMS
!
      LOGICAL, ALLOCATABLE :: YASMI(:)
!
!-----------------------------------------------------------------------
!
!       6) STRINGS
!
!-----------------------------------------------------------------------
!
!     NAMES OF VARIABLES IN RES FILE
!
      CHARACTER(LEN=32) TEXRES(100)
!
!     NAMES OF VARIABLES IN RBI FILE
!
      CHARACTER(LEN=32) TEXRBI(100)
!
!     NAMES OF VARIABLES IN REF FILE
!
      CHARACTER(LEN=32) TEXREF(100)
!
!     KEYWORD "PARAMETER ESTIMATION"
!
      CHARACTER(LEN=72) ESTIME
!
!=======================================================================
!
!     COPY OF SUBMIT STRINGS IN THE DICTIONARY
!
      CHARACTER(LEN=PATH_LEN) SUBMIT(4,300)
!
!-----------------------------------------------------------------------
!
!       7) FRICTION DEFINITION BY ZONE
!
!-----------------------------------------------------------------------
!
!     ???????
!
      TYPE(FRICTION_OBJ), TARGET :: FRTAB
!
!     ???????
!
      TYPE(BIEF_OBJ), TARGET :: KFROPT, NKFROT
!
!     DEFAULT MANNING COEFFICIENT
!
      TYPE(BIEF_OBJ), TARGET :: NDEFMA
!
!     COEFFICIENTS FOR VEGETATION LAW AND VEGETATION LAW NUMBER
!
      TYPE(BIEF_OBJ), TARGET :: VCOEFF, VEGLAW
!
!     ???????
!
      TYPE(BIEF_OBJ), TARGET :: NDEF_B, KFRO_B
!
!     NUMBER OF ZONES
!
      INTEGER:: NZONES
!
!     MAXIMUM NUMBER OF FRICTION DOMAINS
!
      INTEGER:: NZONMX
!
!     IF YES, VEGETATION FRICTION
!
      LOGICAL:: VEGETATION
!
!     IF YES, FRICTION DATA
!
      LOGICAL:: FRICTB
!
!     DEFAULT MANNING VALUE (FOR COLEBROOK-WHITE LAW)
!
      DOUBLE PRECISION :: NDEF
!
!-----------------------------------------------------------------------
!
!      8) TELEMAC-2D FILES
!
!-----------------------------------------------------------------------
!
!     TELEMAC-2D FILES
!
      TYPE(BIEF_FILE), TARGET :: T2D_FILES(MAXLU_T2D)
!
!-----------------------------------------------------------------------
!
!      9) SECTIONS
!
!-----------------------------------------------------------------------
!
!     FOR CONTROL SECTIONS
!     ALLOCATED AND INITIALISED IN READ_SECTIONS_TELEMAC2D
!
      TYPE (CHAIN_TYPE), ALLOCATABLE :: CHAIN(:)
!
!
!-----------------------------------------------------------------------
!
!      10) WEIRS
!
!-----------------------------------------------------------------------
!
!     FOR WEIRS IF TYPE = 2
!     ALLOCATED AND INITIALISED IN LECSNG2
!
      TYPE (WEIR_ELEMENT)     , ALLOCATABLE :: WEIRS(:)
      TYPE (WEIR_ELEMENT_PROC), ALLOCATABLE :: WEIRS_PROC(:)
      TYPE (WEIR_NODES)       , ALLOCATABLE :: WNODES(:)
      TYPE (WEIR_NODES_PROC)  , ALLOCATABLE :: WNODES_PROC(:)
      TYPE (WEIR_NODES)       , ALLOCATABLE :: WN_SEND(:)
      TYPE (WEIR_NODES_PROC)  , ALLOCATABLE :: WN_SEND_PROC(:)
!
      INTEGER :: LEN_W_BUF, LEN_WT_BUF, LEN_WH_BUF
      DOUBLE PRECISION, DIMENSION(:,:), ALLOCATABLE :: W_BUF_RECV
      DOUBLE PRECISION, DIMENSION(:,:), ALLOCATABLE :: W_BUF_SEND
      DOUBLE PRECISION, DIMENSION(:,:), ALLOCATABLE :: WT_BUF_RECV
      DOUBLE PRECISION, DIMENSION(:,:), ALLOCATABLE :: WT_BUF_SEND
      DOUBLE PRECISION, DIMENSION(:,:), ALLOCATABLE :: WH_BUF_RECV
      DOUBLE PRECISION, DIMENSION(:,:), ALLOCATABLE :: WH_BUF_SEND
!
      INTEGER, DIMENSION(:), ALLOCATABLE :: WEIR_BREACH_START
      INTEGER, DIMENSION(:), ALLOCATABLE :: WEIR_BREACH_END
!
!     SAVED VARIABLES
!
      ! majtrac
      DOUBLE PRECISION, ALLOCATABLE :: DST_MT(:,:)
      DOUBLE PRECISION, ALLOCATABLE :: DSP_MT(:),DSM_MT(:),CORRT_MT(:)
      DOUBLE PRECISION,ALLOCATABLE  :: GRADI_MT(:),GRADJ_MT(:)
      DOUBLE PRECISION,ALLOCATABLE  :: GRADIJ_MT(:),GRADJI_MT(:)
      LOGICAL :: DEJA_MT = .FALSE.
      ! read_fic_polygone and read_fic_points
      INTEGER NPLY
      INTEGER, PARAMETER :: MAX_PLY = 21
      INTEGER, PARAMETER :: MAXPOIN_PLY = 2100
      INTEGER            :: NPOIN_PLY(MAX_PLY)
      DOUBLE PRECISION   :: VALUE_PLY(MAXPOIN_PLY)
      DOUBLE PRECISION   :: X_PLY(MAXPOIN_PLY),Y_PLY(MAXPOIN_PLY)
      ! read_fic_source
      INTEGER NVALUE_RFS,NLIG_RFS,IL1_RFS,IL2_RFS
      INTEGER, PARAMETER :: MAXVALUE_RFS=2100
      CHARACTER(LEN=9) CHOIX_RFS(MAXVALUE_RFS),LASTWHAT_RFS
      DOUBLE PRECISION TL1_RFS,TL2_RFS,LASTAT_RFS
      DOUBLE PRECISION, DIMENSION(:,:), ALLOCATABLE :: INFIC_RFS
      DOUBLE PRECISION, DIMENSION(:)  , ALLOCATABLE :: TIME_RFS
      INTEGER SRC_REF_DATE(6)
      LOGICAL :: DEJA_RFS=.FALSE.
      DOUBLE PRECISION :: SRC_TEL_OFFSET
      ! bilan.f
      DOUBLE PRECISION FLUX1_OLD,MASSE0,MASSE1,MASSE2,MASENT,MASSET
      DOUBLE PRECISION FLUXN_OLD
      ! fluxpr_telemac2d
      DOUBLE PRECISION, ALLOCATABLE :: WORK_FPR(:)
      LOGICAL :: OLD_METHOD_FPR=.FALSE.
      LOGICAL :: INIT_FPR=.TRUE.
      INTEGER :: NSEO_FPR
      ! testeur
!     FORMER ARRAY !!!
      DOUBLE PRECISION, ALLOCATABLE :: FLUX_TESTEUR(:)
      LOGICAL :: DEJA_TESTEUR = .FALSE.
      ! nodalf_schureman
      INTEGER YEAR,NDAY,HOUR,MINUTE,SECOND
      ! flucin
!     AUTOMATIC EX ARRAYS!!!!!!
      DOUBLE PRECISION, ALLOCATABLE :: DSH_FC(:,:),DSU_FC(:,:)
      DOUBLE PRECISION, ALLOCATABLE :: DSV_FC(:,:)
      DOUBLE PRECISION, ALLOCATABLE :: DSP_FC(:),DSM_FC(:),DSZ_FC(:,:)
      DOUBLE PRECISION, ALLOCATABLE :: CORR_FC(:),DTLL_FC(:)
      DOUBLE PRECISION, ALLOCATABLE :: GRADI_FC(:,:),GRADJ_FC(:,:)
      DOUBLE PRECISION, ALLOCATABLE :: GRADIJ_FC(:,:),GRADJI_FC(:,:)
      LOGICAL :: DEJA_FC = .FALSE.
      ! nodalf_pugh
      INTEGER YEAR_NP,NDAY_NP,HOUR_NP,MINUTE_NP,SECOND_NP
      ! read_fic_frliq
      LOGICAL :: DEJA_RFF = .FALSE.
      DOUBLE PRECISION, DIMENSION(:,:), ALLOCATABLE :: INFIC_RFF
      DOUBLE PRECISION, DIMENSION(:)  , ALLOCATABLE :: TIME_RFF
      INTEGER, PARAMETER :: MAXVALUE_RFF = 2100
      CHARACTER(LEN=9) CHOIX_RFF(MAXVALUE_RFF),LASTWHAT_RFF
      INTEGER :: IL1_RFF,IL2_RFF,NVALUE_RFF,NLIG_RFF
      DOUBLE PRECISION :: TL1_RFF,TL2_RFF,LASTAT_RFF
      INTEGER LIQ_REF_DATE(6)
      DOUBLE PRECISION :: LIQ_TEL_OFFSET
      ! spectre
      INTEGER :: AFBGN,AFEND
      DOUBLE PRECISION, ALLOCATABLE :: AM(:,:),BM(:,:),HA(:)
      LOGICAL :: DEJA = .FALSE.
      ! bord_tidal_bc
      LOGICAL :: DEJA_TBC = .FALSE.
      INTEGER, ALLOCATABLE :: FIRSTTIDE(:),LASTTIDE(:)
      ! flusec_telemac2d
      LOGICAL :: DEJA_FS = .FALSE.
      LOGICAL :: OLD_METHOD_FS=.FALSE.
      DOUBLE PRECISION, ALLOCATABLE :: VLX_FS(:),VOLNEG_FS(:)
      DOUBLE PRECISION, ALLOCATABLE :: VOLPOS_FS(:)
      INTEGER, ALLOCATABLE :: NSEG_FS(:),LISTE_FS(:,:,:)
      ! bilant1
      DOUBLE PRECISION MASTR0_BT1(100),MASTR1_BT1(100)
      DOUBLE PRECISION MASTR2_BT1(100),MASTEN_BT1(100)
      DOUBLE PRECISION MASTOU_BT1(100),DIRTOT_BT1(100)
      ! preres_telemac2d
      LOGICAL :: DEJA1_PRERES = .FALSE.
      LOGICAL :: DEJA2_PRERES = .FALSE.
      LOGICAL :: DEJA3_PRERES = .FALSE.
      ! breach
      LOGICAL :: DEJALU_BREACH = .FALSE.
      ! thomps
      LOGICAL :: INIT_THOMPS = .TRUE.
      TYPE(BIEF_OBJ) :: FNCAR1,FTILD1
      ! bord_tide
      LOGICAL :: DEJA_BT = .FALSE.
      INTEGER NPTFRL,NTIDE
      INTEGER, ALLOCATABLE :: FIRSTTIDE_BT(:),LASTTIDE_BT(:)
      INTEGER, ALLOCATABLE :: SHIFTTIDE_BT(:)
      DOUBLE PRECISION, ALLOCATABLE :: AHM2(:),PHM2(:)
      DOUBLE PRECISION, ALLOCATABLE :: AHS2(:),PHS2(:)
      DOUBLE PRECISION, ALLOCATABLE :: AHN2(:),PHN2(:)
      DOUBLE PRECISION, ALLOCATABLE :: AHM4(:),PHM4(:)
      DOUBLE PRECISION, ALLOCATABLE :: AUM2(:),PUM2(:)
      DOUBLE PRECISION, ALLOCATABLE :: AUS2(:),PUS2(:)
      DOUBLE PRECISION, ALLOCATABLE :: AUN2(:),PUN2(:)
      DOUBLE PRECISION, ALLOCATABLE :: AUM4(:),PUM4(:)
      DOUBLE PRECISION, ALLOCATABLE :: AVM2(:),PVM2(:)
      DOUBLE PRECISION, ALLOCATABLE :: AVS2(:),PVS2(:)
      DOUBLE PRECISION, ALLOCATABLE :: AVN2(:),PVN2(:)
      DOUBLE PRECISION, ALLOCATABLE :: AVM4(:),PVM4(:)
      DOUBLE PRECISION, ALLOCATABLE :: FHXM2(:),FHYM2(:)
      DOUBLE PRECISION, ALLOCATABLE :: FHXS2(:),FHYS2(:)
      DOUBLE PRECISION, ALLOCATABLE :: FHXN2(:),FHYN2(:)
      DOUBLE PRECISION, ALLOCATABLE :: FHXM4(:),FHYM4(:)
      DOUBLE PRECISION, ALLOCATABLE :: FUXM2(:),FUYM2(:)
      DOUBLE PRECISION, ALLOCATABLE :: FUXS2(:),FUYS2(:)
      DOUBLE PRECISION, ALLOCATABLE :: FUXN2(:),FUYN2(:)
      DOUBLE PRECISION, ALLOCATABLE :: FUXM4(:),FUYM4(:)
      DOUBLE PRECISION, ALLOCATABLE :: FVXM2(:),FVYM2(:)
      DOUBLE PRECISION, ALLOCATABLE :: FVXS2(:),FVYS2(:)
      DOUBLE PRECISION, ALLOCATABLE :: FVXN2(:),FVYN2(:)
      DOUBLE PRECISION, ALLOCATABLE :: FVXM4(:),FVYM4(:)
      DOUBLE PRECISION UPVM2,UPVN2,UPVS2,FFMN2,FFM4
      DOUBLE PRECISION FM2,FS2,FN2,FM4
      ! bord_tide_misc
      INTEGER, PARAMETER   :: MISC_NCMX_BTM = 61
      CHARACTER(LEN=4) :: MISC_CONSTID_BTM(MISC_NCMX_BTM) =
     &                 (/'2MK6','2MN6','2MS6','2N2 ','2Q1 ',
     &                   '2SM2','2SM6','E2  ','Tta1','J1  ',
     &                   'K1  ','K2  ','KJ2 ','KQ1 ','L2  ',
     &                   'La2 ','M1  ','M2  ','M3  ','M4  ',
     &                   'M6  ','M8  ','Mf  ','MK3 ','MK4 ',
     &                   'MKS2','Mm  ','MN4 ','MO3 ','MP1 ',
     &                   'MS4 ','MSf ','MSK6','MSN2','MSN6',
     &                   'MSqm','Mtm ','Mu2 ','N2  ','N4  ',
     &                   'Nu2 ','O1  ','OO1 ','P1  ','Pi1 ',
     &                   'Q1  ','R2  ','Ro1 ','S1  ','S2  ',
     &                   'S4  ','Sa  ','Sig1','SK4 ','SN4 ',
     &                   'Ssa ','T2  ','Phi1','Ki1 ','Psi1',
     &                   'Z0  '/)
      LOGICAL :: DEJA_BTM = .FALSE.
      INTEGER :: NTIDE_BTM, NPTFRL_BTM,NWAVES_BTM,NWAVES2_BTM
      INTEGER, ALLOCATABLE :: FIRSTTIDE_BTM(:),LASTTIDE_BTM(:)
      INTEGER, ALLOCATABLE :: SHIFTTIDE_BTM(:)
      INTEGER, ALLOCATABLE :: INDW_BTM(:),INDW2_BTM(:),INDW3_BTM(:)
      CHARACTER(LEN=4), ALLOCATABLE :: NAMEWAVE_BTM(:)
      DOUBLE PRECISION, ALLOCATABLE :: AH_BTM(:,:),PH_BTM(:,:)
      DOUBLE PRECISION, ALLOCATABLE :: AU_BTM(:,:),PU_BTM(:,:)
      DOUBLE PRECISION, ALLOCATABLE :: AV_BTM(:,:),PV_BTM(:,:)
      DOUBLE PRECISION, ALLOCATABLE :: LON_BTM(:,:),LAT_BTM(:,:)
      DOUBLE PRECISION, ALLOCATABLE :: UPV_BTM(:),FF_BTM(:)
      DOUBLE PRECISION, ALLOCATABLE :: OMEGA_BTM(:),PHCALHW_BTM(:)
      ! flusec_t2d.f
      TYPE FLUXLINE
        INTEGER, ALLOCATABLE :: SECTIONIDS(:)
        INTEGER, ALLOCATABLE :: DIRECTION(:)
        INTEGER              :: NOFSECTIONS
      END TYPE FLUXLINE
      LOGICAL :: DEJA_FLUSECT2D = .FALSE.
      INTEGER :: NUMBEROFLINES_FLUSECT2D
      DOUBLE PRECISION :: TIME_FLUSECT2D
      TYPE(FLUXLINE), ALLOCATABLE :: FLUXLINEDATA_FLUSECT2D(:)
      DOUBLE PRECISION, ALLOCATABLE :: FLX_FLUSECT2D(:,:)
      DOUBLE PRECISION, ALLOCATABLE :: VOLFLUX_FLUSECT2D(:,:)
      ! collect_values.f
      INTEGER :: MSG_TAG = 5000
      ! collect_values_trac.f
      INTEGER :: MSG_TAG_TRA = 5000
      ! collect_values_wave.f
      INTEGER :: MSG_TAG_W = 5000
      ! prosou

      LOGICAL :: PROSOU_DEJALU = .FALSE.
!
      ! telemac2d.F
      DOUBLE PRECISION KMAX
      DOUBLE PRECISION EMAX,SIGMAE,SIGMAK,C1
      ! YAFLULIM: If yes, flulim will be applied to segment fluxes when
      ! calling cvdftr
      ! YAFLODEL If yes, flodel has been computed
      LOGICAL :: YAFLULIM, YAFLULIMEBE, YAFLODEL
      INTEGER LEOPRD_CHARR
      INTEGER REF_T2D
      INTEGER TROUVE(MAXVAR+10)

      DOUBLE PRECISION KMIN,FLUSOR,MASS_RAIN,FLUENT
      DOUBLE PRECISION MASSES,RELAXS,RELAXB
      DOUBLE PRECISION EMIN,ESTAR,SCHMIT,C2,CMU

      LOGICAL AKEP,SA
      LOGICAL IMP
      LOGICAL,TARGET::LEO,LEO_TRAC

      CHARACTER(LEN=24), PARAMETER :: CODE1='TELEMAC2D               '

      INTEGER IOPTAN_T2D

      INTEGER JJJJ
!                 U V   H S B       K E D
      INTEGER :: ALIRE(MAXVAR) = (/
     &            1,1,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
!                                 D
!                                 H
     &            0,0,0,0,0,0,0,0,1,(0,JJJJ=37,MAXVAR) /)
!      INTEGER :: ALIRE(MAXVAR) = (/
!     &            1,1,0,1,1,1,0,0,0,1,1,1,(0,JJJJ=13,MAXVAR) /)
!     ADVECTION FIELD USED FOR SISYPHE CALL
!
      TYPE(BIEF_OBJ), POINTER :: USIS,VSIS
!     Number of iterations asked in the case file for api
      INTEGER :: TOTAL_ITER
!
      TYPE(BIEF_OBJ), TARGET :: NES_DZ
!
      DOUBLE PRECISION, ALLOCATABLE :: AVAIL(:,:,:)
!
      ! Criteria to stop the computation
      LOGICAL :: ARRET1, ARRET2, ARRET3
!
      SAVE
!
!     ============================================
!
      END MODULE DECLARATIONS_TELEMAC2D
