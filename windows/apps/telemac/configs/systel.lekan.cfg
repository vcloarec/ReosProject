###
### See http://wiki.opentelemac.org/doku.php?id=installation_notes_2_beta
### On how to install telemac
###
# _____                              _______________________________
# ____/ TELEMAC Project Definitions /______________________________/
#
[Configurations]
configs: win win_no_mpi
# _____          ____________________________________
# ____/ General /___________________________________/
# Global declaration used for all configurations
[general]
language: 2
version:  main
#
sfx_zip:    gztar
sfx_lib:    .a
sfx_obj:    .o
sfx_mod:    .mod
sfx_exe:
#
#
val_root:   <root>/examples
#
val_rank:   all
#
mods_all:   -I <config>
ar: ar
lib_flags: cru
#
# MPI info
#
fc: mpif90
flags_mpi: -DHAVE_MPI
# Those are for nag.ad
incs_mpi: -kind=byte -I$MPIHOME/include
libs_mpi: -L$MPIHOME/lib -lmpichf90 -lmpich -lopa -lmpl -lrt -lpthread
cmd_doxygen:doxygen

#
# METIS info
#
libs_metis: -L$METISHOME/lib -lmetis

#
# MED info
#
incs_med: -I$MEDHOME/include
flags_med: -DHAVE_MED
libs_med: -lm -L$MEDHOME/lib -lmed -L$HDF5HOME/lib -lhdf5 -ldl -lstdc++ -lz

#
# MUMPS info
#
incs_mumps: -I$MUMPSHOME/include
flags_mumps: -DHAVE_MUMPS
libs_mumps: $MUMPSHOME/lib/libdmumps.a
            $MUMPSHOME/lib/libmumps_common.a
            $MUMPSHOME/lib/libpord.a
            $SCALAPACKHOME/lib/libscalapack.a
            -L/local/BLAS -lblas
libs_so_mumps: -L$MUMPSHOME/lib -ldmumps -lmumps_common -lpord
               -L$SCALAPACKHOME/lib -lscalapack
               -lblas

libs_so_mumps_mkl: -L$MUMPSHOME/lib -ldmumps -lmumps_common -lpord
               -L$MKLDIR -lmkl_scalapack_lp64 -lmkl_blacs_intelmpi_lp64
               -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lmkl_def
               -lpthread -lm -ldl

#
# AED info
#
incs_aed: -I $AEDHOME/include
flags_aed: -DHAVE_AED2
libs_aed: -L$AEDHOME/lib -laed2

#
# GOTM info
#
incs_gotm: -I $GOTMHOME/include
flags_gotm: -DHAVE_GOTM
libs_gotm: -L$GOTMHOME/lib -lturbulence -lutil

#
# Gfortran info
#
fflags_gfo: -cpp -fconvert=big-endian -frecord-marker=4 -DHAVE_I16
fflags_debug_gfo: -g -Wall -fcheck=all -fbacktrace -fbounds-check -finit-integer=-1 -finit-real=nan -ffpe-trap=invalid,zero,overflow

#
# Intel info
#
fflags_intel_new: -cpp -convert big_endian
fflags_intel: [fflags_intel_new] -DNO_INQUIRE_SIZE
fflags_debug_intel: -debug all -check all -traceback
# TODO: -ftrapuv

#
# Nag info
#
fflags_nag: -fpp -w=obs -Oassumed -convert=BIG_ENDIAN -DNAGFOR
fflags_nag_ad: -fpp -w=obs -Oassumed -DNAGFOR
fflags_debug_nag: -g -gline -C=all

#
# Cluster info
#
# Dirty hack as there is a bug withing configparser in py3 that removes lines starting with #
sbatch_tag:#SBATCH
hpc_stdin_edf: #!/bin/bash
  [sbatch_tag] --job-name=<jobname>
  [sbatch_tag] --output=<jobname>-<time>.out
  [sbatch_tag] --time=<walltime>
  [sbatch_tag] --ntasks=<ncsize>
  [sbatch_tag] --partition=<queue>
  [sbatch_tag] --exclusive
  [sbatch_tag] --nodes=<ncnode>
  [sbatch_tag] --ntasks-per-node=<nctile>
  source <root>/configs/pysource.<configName>.sh
  <py_runcode>
hpc_runcode_edf: bash <root>/scripts/submit_slurm.sh <id_log>
par_cmd_exec_edf: srun -n 1 -N 1 <config>/partel < <partel.par> >> <partel.log>

# mpic_cmedexec style submit (for nag)
hpc_stdin_cmdexec_edf: #!/bin/bash
  [sbatch_tag] --job-name=<jobname>
  [sbatch_tag] --output=<jobname>-<time>.out
  [sbatch_tag] --time=<walltime>
  [sbatch_tag] --ntasks=<ncsize>
  [sbatch_tag] --partition=<queue>
  [sbatch_tag] --exclusive
  [sbatch_tag] --nodes=<ncnode>
  [sbatch_tag] --ntasks-per-node=<nctile>
  source <root>/configs/pysource.<configName>.sh
  <mpi_cmdexec>
hpc_cmdexec_edf: ret=`sbatch < HPC_STDIN`;id=`echo $ret|tr ' ' '\n'|tail -n 1`;dir=`readlink -f ..`;echo "$id;$dir" >> <id_log>; echo $ret
#
# Gcov info
#
flags_gcov: -fprofile-arcs -ftest-coverage -fPIC

#
# Generic info
#

mpi_cmdexec: mpirun -np <ncsize> <exename>

cmd_obj:    [fc] -c [obj_flags] <mods> <incs> <f95name>
cmd_lib:    [ar] [lib_flags] <libname> <objs>
cmd_exe:    [fc] [exe_flags] -o <exename> <objs> <libs>

incs_all: [incs_med] [incs_mumps] [incs_aed] [incs_gotm]
libs_all: [libs_mumps] [libs_med] [libs_metis] [libs_aed] [libs_gotm]
# Link with shared libraries
libs_so: [libs_so_mumps] [libs_med] [libs_metis] [libs_aed] [libs_gotm]
#
cmd_obj_c: gcc -c [cflags] <srcName> -o <objName>
cflags:
#


# _____          _______________________________
# ____/ Windows /______________________________/
#
[win]
brief: Windows static build using Mingw and MS-MPI
modules:  telemac2d partel gretel
#
#options: api
#
f2py_name: f2py
f2py_opt: -O3
pyd_compiler: mingw32
pyd_fcompiler: gnu95
#
obj_flags: -O2 [fflags_gfo] [flags_mpi] [flags_mumps] [flags_med] [flags_aed] [flags_gotm]
lib_flags: cru
#
exe_flags: -fPIC [fflags_gfo]
#
sfx_lib:    .a
sfx_exe:    .exe
#
mpi_cmdexec: mpiexec -n <ncsize> <exename>
#
# METIS info
#
libs_metis: -L%METISHOME%/lib -lmetis
#
# MED info
#
incs_med: -I%MEDHOME%/include
flags_med: -DHAVE_MED
libs_med: -lm -L%MEDHOME%/lib -lmed -lmedfwrap -L%HDF5HOME%/lib -lhdf5 -ldl -lstdc++
#
# MSMPI info
#
libs_mpi: -L%MPIHOME%/lib -lmsmpi
#
#
# MUMPS info
#
incs_mumps: -I%MUMPSHOME%/include
flags_mumps: -DHAVE_MUMPS
libs_mumps: -L%MUMPSHOME%/lib -ldmumps -lmumps_common -lpord
            -L%SCALAPACKHOME%/lib -lscalapack
            -L%LAPACKHOME%/lib -llapack -lblas
#
# AED info
#
incs_aed: -I%AEDHOME%/include
flags_aed: -DHAVE_AED2
libs_aed: -L%AEDHOME%/lib -laed2
#
# GOTM info
#
incs_gotm: -I%GOTMHOME%/include
flags_gotm: -DHAVE_GOTM
libs_gotm: -L%GOTMHOME%/lib -lturbulence -lutil
#
incs_all: [incs_med] [incs_mumps] [incs_aed] [incs_gotm]
libs_all: -lgfortran [libs_med] [libs_metis] [libs_mumps] [libs_mpi] [libs_aed] [libs_gotm]
#

# _____          _______________________________
# ____/ Windows without mpi/______________________________/
#
[win_no_mpi]
brief: Windows static build using Mingw
modules:  telemac2d
#
#options: api
#
f2py_name: f2py
f2py_opt: -O3
pyd_compiler: mingw32
pyd_fcompiler: gnu95
#
obj_flags: -O2 [fflags_gfo] [flags_med] [flags_aed] [flags_gotm]
lib_flags: cru
#
exe_flags: -fPIC [fflags_gfo]
#
sfx_lib:    .a
sfx_exe:    .exe

#
# MED info
#
incs_med: -I%MEDHOME%/include
flags_med: -DHAVE_MED
libs_med: -lm -L%MEDHOME%/lib -lmed -lmedfwrap -L%HDF5HOME%/lib -lhdf5 -ldl -lstdc++

# AED info
#
incs_aed: -I%AEDHOME%/include
flags_aed: -DHAVE_AED2
libs_aed: -L%AEDHOME%/lib -laed2
#
# GOTM info
#
incs_gotm: -I%GOTMHOME%/include
flags_gotm: -DHAVE_GOTM
libs_gotm: -L%GOTMHOME%/lib -lturbulence -lutil
#
incs_all: [incs_med] [incs_aed] [incs_gotm]
libs_all: -lgfortran [libs_med] [libs_aed] [libs_gotm]
#
